{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Hello</p>"},{"location":"note/","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"note/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"note/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre> <ul> <li> \u2013 <code>.icons/material/account-circle.svg</code></li> <li> \u2013 <code>.icons/fontawesome/regular/laugh-wink.svg</code></li> </ul> <pre><code>import tensorflow as tf \n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n    printf(\"Hello world!\\n\");\n    return 0;\n}\n</code></pre> <ul> <li> <p>Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur   accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh   lacinia sed. Aenean in finibus diam.</p> <ul> <li>Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.</li> <li>Nam vulputate tincidunt fringilla.</li> <li>Nullam dignissim ultrices urna non auctor.</li> </ul> </li> <li> <p>Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis   sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis   nulla. Vivamus a pharetra leo.</p> <ol> <li> <p>Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet   quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a   ultricies libero efficitur sed.</p> </li> <li> <p>Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet   rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a.</p> <ol> <li>Mauris dictum mi lacus</li> <li>Ut sit amet placerat ante</li> <li>Suspendisse ac eros arcu</li> </ol> </li> </ol> </li> </ul> <p><code>Lorem ipsum dolor sit amet</code> :   Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus     tellus non sem sollicitudin, quis rutrum leo facilisis.</p> <p><code>Cras arcu libero</code> :   Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin     ut eros sed sapien ullamcorper consequat. Nunc ligula ante.</p> <pre><code>Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.\nNam vulputate tincidunt fringilla.\nNullam dignissim ultrices urna non auctor.\n</code></pre> <pre><code>- [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit\n- [ ] Vestibulum convallis sit amet nisi a tincidunt\n    * [x] In hac habitasse platea dictumst\n    * [x] In scelerisque nibh non dolor mollis congue sed et metus\n    * [ ] Praesent sed risus massa\n- [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque\n</code></pre> <ul> <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit</li> <li> Vestibulum convallis sit amet nisi a tincidunt<ul> <li> In hac habitasse platea dictumst</li> <li> In scelerisque nibh non dolor mollis congue sed et metus</li> <li> Praesent sed risus massa</li> </ul> </li> <li> Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque</li> </ul> <p>The homomorphism \\(f\\) is injective if and only if its kernel is only the  singleton set \\(e_G\\), because otherwise \\(\\exists a,b\\in G\\) with \\(a\\neq b\\) such  that \\(f(a)=f(b)\\).</p> \\[\\operatorname{ker} f=\\{g\\in G:f(g)=e_{H}\\}{\\mbox{.}}\\] <p>Trang index s\u1ebd l\u00e0 n\u01a1i c\u1eadp nh\u1eadt n\u1ed9i dung b\u00e0i vi\u1ebft c\u1ee7a c\u1ea3 blog</p> <p>Ch\u1ee7 \u0111\u1ec1 [ti\u00eau \u0111\u1ec1] [ng\u00e0y c\u1eadp nh\u1eadt][link b\u00e0i vi\u1ebft][link code n\u1ebfu c\u00f3]</p>"},{"location":"tags/","title":"Tags","text":"<p>My Tags</p>"},{"location":"tags/#tag:html","title":"HTML","text":"<ul> <li>            Page 1          </li> </ul>"},{"location":"tags/#tag:javascript","title":"JavaScript","text":"<ul> <li>            Page 1          </li> </ul>"},{"location":"about/me/","title":"Me","text":"<p>Hello</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2022/09/12/blog-support-just-landed/","title":"Blog support just landed","text":"<p>Hey there! You're looking at our new blog, built with the brand new built-in blog plugin. With this plugin, you can easily build a blog alongside your documentation or standalone.</p> <p>Proper support for blogging, as requested by many users over the past few years, was something that was desperately missing from Material for MkDocs' feature set. While everybody agreed that blogging support was a blind spot, it was not obvious whether MkDocs could be extended in a way to allow for blogging as we know it from Jekyll and friends. The built-in blog plugin proves that it is, after all, possible to build a blogging engine on top of MkDocs, in order to create a technical blog alongside your documentation, or as the main thing.</p> <p>This article explains how to build a standalone blog with Material for MkDocs. If you want to build a blog alongside your documentation, please refer to the plugin's documentation.</p>"},{"location":"blog/2022/09/12/blog-support-just-landed/#quick-start","title":"Quick start","text":""},{"location":"blog/2022/09/12/blog-support-just-landed/#creating-a-standalone-blog","title":"Creating a standalone blog","text":"<p>You can bootstrap a new project using the <code>mkdocs</code> executable:</p> <pre><code>mkdocs new .\n</code></pre> <p>This will create the following structure:</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre>"},{"location":"blog/2022/09/12/blog-support-just-landed/#configuration","title":"Configuration","text":"<p>In this article, we're going to build a standalone blog, which means that the blog lives at the root of your project. For this reason, open <code>mkdocs.yml</code>, and replace its contents with:</p> <pre><code>site_name: My Blog\ntheme:\n  name: material\n  features:\n    - navigation.sections\nplugins:\n  - blog:\n      blog_dir: . # (1)!\n  - search\n  - tags\nnav:\n  - index.md\n</code></pre> <ol> <li>This is the important part \u2013 we're hosting the blog at the root of the     project, and not in a subdirectory. For more information, see the     <code>blog_dir</code> configuration option.</li> </ol>"},{"location":"blog/2022/09/12/blog-support-just-landed/#blog-setup","title":"Blog setup","text":"<p>The blog index page lives in <code>docs/index.md</code>. This page was pre-filled by MkDocs with some content, so we're going to replace it with what we need to bootstrap the blog:</p> <pre><code># Blog\n</code></pre> <p>That's it.</p>"},{"location":"blog/2022/09/12/blog-support-just-landed/#writing-your-first-post","title":"Writing your first post","text":"<p>Now that we have set up the built-in blog plugin, we can start writing our first post. All blog posts are written with the exact same Markdown flavor as already included with Material for MkDocs. First, create a folder called <code>posts</code> with a file called <code>hello-world.md</code>:</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u251c\u2500 posts/\n\u2502  \u2502  \u2514\u2500 hello-world.md # (1)!\n\u2502  \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre> <ol> <li>If you'd like to arrange posts differently, you're free to do so. The URLs     are built from the format specified in <code>post_url_format</code> and     the titles and dates of posts, no matter how they are organized     inside the <code>posts</code> directory.</li> </ol> <p>Then, open up <code>hello-world.md</code>, and add the following lines:</p> <pre><code>---\ndraft: true # (1)!\ndate: 2022-01-31\ncategories:\n  - Hello\n  - World\n---\n\n# Hello world!\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque nec\nmaximus ex. Sed consequat, nulla quis malesuada dapibus, elit metus vehicula\nerat, ut egestas tellus eros at risus. In hac habitasse platea dictumst.\nPhasellus id lacus pulvinar erat consequat pretium. Morbi malesuada arcu mauris\nNam vel justo sem. Nam placerat purus non varius luctus. Integer pretium leo in\nsem rhoncus, quis gravida orci mollis. Proin id aliquam est. Vivamus in nunc ac\nmetus tristique pellentesque. Suspendisse viverra urna in accumsan aliquet.\n\n&lt;!-- more --&gt;\n\nDonec volutpat, elit ac volutpat laoreet, turpis dolor semper nibh, et dictum\nmassa ex pulvinar elit. Curabitur commodo sit amet dolor sed mattis. Etiam\ntempor odio eu nisi gravida cursus. Maecenas ante enim, fermentum sit amet\nmolestie nec, mollis ac libero. Vivamus sagittis suscipit eros ut luctus.\n\nNunc vehicula sagittis condimentum. Cras facilisis bibendum lorem et feugiat.\nIn auctor accumsan ligula, at consectetur erat commodo quis. Morbi ac nunc\npharetra, pellentesque risus in, consectetur urna. Nulla id enim facilisis\narcu tincidunt pulvinar. Vestibulum laoreet risus scelerisque porta congue.\nIn velit purus, dictum quis neque nec, molestie viverra risus. Nam pellentesque\ntellus id elit ultricies, vel finibus erat cursus.\n</code></pre> <ol> <li>If you mark a post as a draft, a red marker appears next to the post date     on index pages. When the site is built, drafts are not included in the     output. This behavior can be changed, e.g. for rendering drafts when     building deploy previews.</li> </ol> <p>When you spin up the live preview server, you should be greeted by your first post! You'll also realize, that archive and category indexes have been automatically generated for you:</p> <p></p> <p>However, this is just the start. The built-in blog plugin packs a lot of functionality needed in day-to-day blogging. Visit the documentation of the plugin to learn about the following topics:</p>   - [Adding an excerpt] - [Adding authors] - [Adding categories] - [Adding tags] - [Adding related links] - [Linking from and to posts] - [Setting the reading time] - [Setting defaults]   <p>Additionally, the built-in blog plugin has dozens of configuration options which allow for fine-tuning the output. You can configure post slugs, general behavior and much more.</p>"},{"location":"blog/2022/09/12/blog-support-just-landed/#whats-next","title":"What's next?","text":"<p>Getting basic blogging support out the door was quite a challenge \u2013 the built-in blog plugin is probably the biggest release this year and already packs a lot of functionality. However, Material for MkDocs is used in many different contexts, which is why we'd expect to iterate, as always.</p> <p>Some ideas already proposed by users:</p> <ul> <li> <p>Blog series: Authors should be able to create so called blog series and   assign posts to a blog series using simple identifiers. For each post that is   part of a series, a list with links to all other posts should be included in   the post's content.</p> </li> <li> <p>Author indexes: Besides archive and category indexes, authors should   be able to create per-author indexes, which list all posts linked to an   author. Additionally, a profile should be created for each author and linked   from posts.</p> </li> <li> <p>Social share buttons: It should be easy to share blog posts via social   media or other ways. For this reason, it should be possible to automatically   include social sharing buttons with each post.</p> </li> </ul> <p>What's still missing from the brand new built-in blog plugin? Feel free to share your ideas in the comments. Together, we can build one of the best modern engines for technical blogging!</p>"},{"location":"data_visualization/numpy/","title":"Numpy","text":""},{"location":"data_visualization/numpy/#what-is-numpy","title":"What is Numpy?","text":"<p>Numpy l\u00e0 m\u1ed9t th\u01b0 vi\u1ec7n Python cho ph\u00e9p b\u1ea1n th\u1ef1c hi\u1ec7n c\u00e1c ph\u00e9p t\u00ednh s\u1ed1. C\u1ed1t l\u00f5i c\u1ee7a Numpy l\u00e0 m\u1ed9t ki\u1ec3u d\u1eef li\u1ec7u c\u01a1 b\u1ea3n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 m\u1ea3ng Numpy.</p> <p>Trong Python, Numpy l\u00e0 m\u1ed9t trong nh\u1eefng th\u01b0 vi\u1ec7n quan tr\u1ecdng nh\u1ea5t cho khoa h\u1ecdc d\u1eef li\u1ec7u v\u00e0 h\u1ecdc m\u00e1y.</p> <p>Trong t\u00e2m c\u1ee7a Numpy l\u00e0 l\u00e0m vi\u1ec7c v\u1edbi d\u1eef li\u1ec7u s\u1ed1. N\u00f3 v\u1eeba m\u1ea1nh m\u1ebd v\u1eeba \u1edf m\u1ee9c c\u01a1 b\u1ea3n, do \u0111\u00f3 cung c\u1ea5p c\u00e1c ch\u1ee9c n\u0103ng c\u01a1 b\u1ea3n cho c\u00e1c thu\u1eadt to\u00e1n c\u1ea5p cao. N\u1ebfu mu\u1ed1n b\u01b0\u1edbc v\u00e0o l\u0129nh v\u1ef1c h\u1ecdc m\u00e1y v\u00e0 khoa h\u1ecdc d\u1eef li\u1ec7u tr\u01b0\u1edbc ti\u00ean ph\u1ea3i th\u00e0nh th\u1ea1o <code>Numpy</code>.</p> Type Description Bytes <code>bool</code> boolean 1 <code>int</code> int 4 or 8 <code>float</code> float 8 <code>complex</code> complex 16 <code>np.int8</code> Integer 1 <code>np.int16</code> Integer 2 <code>np.int32</code> Integer 4 <code>np.int64</code> Integer 8 <code>np.float16</code> Float 2 <code>np.float32</code> Float 4 <code>np.float64</code> Float 8 <p>Sau \u0111\u00e2y l\u00e0 m\u1ed9t v\u00ed d\u1ee5 c\u00e1ch t\u1ea1o c\u00e1c m\u1ea3ng <code>numpy</code> v\u1edbi nhi\u1ec1u ki\u1ec3u d\u1eef li\u1ec7u kh\u00e1c nhau. </p> <p>V\u00ed d\u1ee5 ch\u1ea1y v\u1edbi <code>numpy</code> phi\u00ean b\u1ea3n <code>2.0.2</code></p> <pre><code>import numpy as np\n\nprint(np.__version__)\n\na = np.array([1, 2, 3], dtype=np.int16)\nprint(a)\nprint(a.dtype)\n\nb = np.array([1, 2, 3], dtype=np.float64)\nprint(b)\nprint(b.dtype)\n</code></pre> <p>Trong v\u00ed d\u1ee5 tr\u00ean ta t\u1ea1o hai m\u1ea3ng <code>numpy</code>. M\u1ea3ng \u0111\u1ea7u ti\u00ean c\u00f3 ki\u1ec3u d\u1eef li\u1ec7u <code>np.int16</code>. M\u1ea3ng th\u1ee9 hai c\u00f3 ki\u1ec3u d\u1eef li\u1ec7u <code>np.float64</code>.</p> <p><code>np?</code> \u0111\u1ec3 hi\u1ec7n th\u1ecb t\u00e0i li\u1ec7u h\u01b0\u1edbng d\u1eabn. <code>np.&lt;TAB&gt;</code> \u0111\u1ec3 hi\u1ec7n th\u1ecb c\u00e1c n\u1ed9i dung.</p>"},{"location":"data_visualization/numpy/#tao-mang","title":"T\u1ea1o m\u1ea3ng","text":"<p>Ta s\u1ebd t\u1ea1o 3 m\u1ea3ng gi\u00e1 tr\u1ecb ng\u1eabu nhi\u00ean: m\u1ea3ng 1 chi\u1ec1u, m\u1ea3ng 2 chi\u1ec1u, m\u1ea3ng 3 chi\u1ec1u. </p> <p><code>seed</code> l\u00e0 tr\u00ecnh t\u1ea1o s\u1ed1 ng\u1eabu nhi\u00ean c\u1ee7a <code>numpy</code>, v\u1edbi m\u1ed9t gi\u00e1 tr\u1ecb kh\u1edfi t\u1ea1o c\u1ed1 \u0111\u1ecbnh \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o c\u00e1c m\u1ea3ng ng\u1eabu nhi\u00ean \u0111\u01b0\u1ee3c t\u1ea1o ra gi\u1ed1ng nhau m\u1ed7i khi \u0111o\u1ea1n m\u00e3 n\u00e0y \u0111\u01b0\u1ee3c ch\u1ea1y.</p> <pre><code>np.random.seed(0)\n\nx1 = np.random.randint(10, size=6)          # 1D\nx2 = np.random.randint(10, size=(3, 4))     # 2D\nx3 = np.random.randint(10, size=(3, 4, 5))  # 3D\n\nprint(\"x3 ndim: \", x3.ndim)\nprint(\"x3 shape: \", x3.shape)\nprint(\"x3 size: \", x3.size)\nprint(\"x3 dtype: \", x3.dtype)\n\nprint(\"itemsize:\", x3.itemsize, \"bytes\")\nprint(\"nbytes:\", x3.nbytes, \"bytes\")\n</code></pre> <ul> <li><code>ndim</code>: cho bi\u1ebft s\u1ed1 chi\u1ec1u c\u1ee7a m\u1ea3ng.</li> <li><code>shape</code>: cho bi\u1ebft h\u00ecnh d\u1ea1ng c\u1ee7a m\u1ea3ng.</li> <li><code>size</code>: cho bi\u1ebft m\u1ea3ng c\u00f3 bao nhi\u00eau ph\u1ea7n t\u1eed.</li> <li><code>dtype</code>: cho bi\u1ebft ki\u1ec3u d\u1eef li\u1ec7u ph\u1ea7n t\u1eed trong m\u1ea3ng.</li> <li><code>itemsize</code>: li\u1ec7t k\u00ea k\u00edch th\u01b0\u1edbc (t\u00ednh b\u1eb1ng byte).</li> <li><code>nbytes</code>: li\u1ec7t k\u00ea t\u1ed5ng k\u00edch th\u01b0\u1edbc c\u1ee7a m\u1ea3ng (byte).</li> </ul>"},{"location":"data_visualization/numpy/#array-indexing","title":"Array Indexing","text":"<p><code>x[start:stop:step]</code> <pre><code>print(x1)\nprint(x1[0])\nprint(x1[-1])\nprint(x1[-2])\nprint(x1[::2]) # l\u1ea5y t\u1eeb \u0111\u1ea7u \u0111\u1ebfn cu\u1ed1i m\u1ea3ng m\u1ed7i l\u00e0 l\u1ea5y b\u1ecf qua 2 ph\u1ea7n t\u1eed\n</code></pre></p>"},{"location":"data_visualization/numpy/#reshaping-of-arrays","title":"Reshaping of Arrays","text":"<p>D\u00f9ng thu\u1ed9c t\u00ednh <code>reshape</code> \u0111\u1ec3 thay \u0111\u1ed5i h\u00ecnh d\u1ea1ng c\u1ee7a 1 m\u1ea3ng <code>numpy</code>. Trong v\u00ed d\u1ee5 sau ta t\u1ea1o 1 m\u1ea3ng 1 chi\u1ec1u c\u00f3 9 ph\u1ea7n t\u1eed. Sau \u0111\u00f3 d\u00f9ng <code>reshape</code> chuy\u1ec3n th\u00e0nh m\u1ea3ng 2 chi\u1ec1u 3x3.</p> <pre><code>grid = np.arange(1, 10).reshape((3, 3))\nprint(grid)\n</code></pre> <p>Ho\u1eb7c c\u00f3 th\u1ec3 d\u00f9ng t\u1eeb kh\u00f3a <code>newaxis</code></p> <pre><code>x = np.array([1, 2, 3])\n\nx.reshape((1, 3))  # row vector via newaxis\nx[np.newaxis, :]\n\nx.reshape((3, 1))  # column vector via reshape\nx[:, np.newaxis]\n</code></pre>"},{"location":"data_visualization/numpy/#array-concatenation-and-splitting","title":"Array Concatenation and Splitting","text":"<p>T\u1ea5t c\u1ea3 c\u00e1c h\u00e0m tr\u01b0\u1edbc \u0111\u1ec1u ho\u1ea1t \u0111\u1ed9ng tr\u00ean m\u1ea3ng \u0111\u01a1n l\u1ebb. Ta c\u00f3 th\u1ec3 k\u1ebft h\u1ee3p nhi\u1ec1u m\u1ea3ng th\u00e0nh m\u1ed9t v\u00e0 ng\u01b0\u1ee3c l\u1ea1i chia m\u1ed9t m\u1ea3ng th\u00e0nh nhi\u1ec1u m\u1ea3ng.</p> <p>Concatenation of arrays: <code>np.concatenate</code>, <code>np.vstack</code>, <code>np.hstack</code>, <code>np.concatenate</code></p> <pre><code>x = np.array([1, 2, 3])\ny = np.array([3, 2, 1])\nnp.concatenate([x, y])\n</code></pre> <ul> <li><code>vstack</code>: th\u00eam theo chi\u1ec1u d\u1ecdc (m\u1edf r\u1ed9ng theo d\u00f2ng)</li> <li><code>hstack</code>: th\u00eam theo chi\u1ec1u ngang (m\u1edf r\u1ed9ng theo c\u1ed9t)</li> </ul> <p>Splitting of arrays: <code>np.vsplit</code>, <code>np.hsplit</code></p> <ul> <li><code>vsplit</code>: chia theo chi\u1ec1u d\u1ecdc (theo d\u00f2ng)</li> <li><code>hsplit</code>: chia theo chi\u1ec1u ngang (theo c\u1ed9t)</li> <li><code>split</code>:  <pre><code>x = [1, 2, 3, 99, 99, 3, 2, 1]\nx1, x2, x3 = np.split(x, [3, 5])\nprint(x1, x2, x3)\n\ngrid = np.arange(16).reshape((4, 4))\nupper, lower = np.vsplit(grid, [2]) #[2] tham s\u1ed1 n\u00e0y cho bi\u1ebft m\u1ea3ng mu\u1ed1n chia c\u00f3 2 d\u00f2ng\nprint(upper)\nprint(lower)\n\nleft, right = np.hsplit(grid, [2])\nprint(left)\nprint(right)\n</code></pre></li> </ul> <p>th\u01b0\u1eddng ta s\u1ebd g\u1eb7p t\u1eeb kh\u00f3a <code>axis=0</code>, <code>axis=1</code>. 0 t\u01b0\u01a1ng \u1ee9ng v\u1edbi d\u00f2ng, 1 t\u01b0\u01a1ng \u1ee9ng v\u1edbi c\u1ed9t.</p>"},{"location":"data_visualization/numpy/#tong-ket","title":"T\u1ed5ng k\u1ebft","text":"<p>Ta \u0111\u00e3 t\u00ecm hi\u1ec3u nh\u1eefng kh\u00e1i ni\u1ec7m h\u1ebft s\u1ee9c c\u01a1 b\u1ea3n <code>numpy</code>nh\u01b0:</p> <ul> <li>T\u1ea1o m\u1ea3ng.</li> <li>Ki\u1ec3u d\u1eef li\u1ec7u ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng.</li> <li>K\u00edch th\u01b0\u1edbc, h\u00ecnh d\u1ea1ng, thay \u0111\u1ed5i h\u00ecnh d\u1ea1ng.</li> <li>G\u1ed9p m\u1ea3ng, chia t\u00e1ch m\u1ea3ng.</li> </ul>"},{"location":"dl/hello/","title":"Hello","text":"<p>hello DL</p>"},{"location":"dl/second/","title":"Page 1","text":"<p>...</p> <p>second hello</p>","tags":["HTML","JavaScript"]},{"location":"fonts/iosevka/","title":"Iosevka","text":"<p>Iosevka is an open-source, sans-serif + slab-serif, monospace + quasi\u2011proportional typeface family, designed for writing code, using in terminals, and preparing technical documents.</p> <p></p>"},{"location":"fonts/iosevka/#installation","title":"Installation","text":"<p>Quit your editor/program. Unzip and open the folder.</p> <ul> <li> <p>Windows: Download the fonts from the Releases, select the font files and right click, then hit \u201cInstall\u201d.  </p> </li> <li> <p>On Windows 10 1809 or newer the default font installation is per-user, and it may cause compatibility issues for some applications, mostly written in Java. To cope with this, right click and select \u201cInstall for all users\u201d instead. Ref.</p> </li> <li>macOS</li> <li>Standard distribution in Homebrew:      <pre><code>brew tap homebrew/cask-fonts\nbrew cask install font-iosevka\n</code></pre></li> <li>Search for other variants using <code>brew search font-iosevka</code> and install what you want.</li> <li>Customizable install using Homebrew: see robertgzr/homebrew-tap.</li> <li>Linux : Copy the TTF files to your fonts directory \u2192 Run <code>sudo fc-cache</code>. </li> <li>Arch Linux users can install the font from the AUR here using an AUR wrapper or by doing it manually. All variants.</li> <li>Void Linux users can install the font with <code>xbps-install font-iosevka</code>.</li> <li>FreeBSD: The font can be installed with <code>pkg install iosevka</code>.</li> <li>OpenBSD: Run <code>pkg_info -Q iosevka</code> to see which Iosevka packages are available. Use <code>pkg_add</code> to install the chosen package(s).</li> </ul>"},{"location":"fonts/iosevka/#features","title":"Features","text":"<p>In the official package, Iosevka provides 6 monospace subfamilies and 3 quasi-proportional subfamilies. In all the monospace subfamilies, 9 weights (Thin to Heavy), 2 widths (Normal and Extended), and 3 slopes (Upright, Italic and Oblique) are included. In the quasi-proportional subfamilies, the quantity of widths is reduced to 1.</p> <p></p> <p>All versions include the same ranges of characters: Latin letters, Greek letters (including Polytonic), some Cyrillic letters, IPA symbols and common punctuations and some symbols. You can check out the full list here.</p> <p></p> <p>162 Supported Languages: </p> <p>Afrikaans, Aghem, Akan, Albanian, Asturian, Asu, Azerbaijani, Bafia, Bambara, Basaa, Basque, Belarusian, Bemba, Bena, Bosnian, Breton, Bulgarian, Catalan, Cebuano, Central Atlas Tamazight, Chechen, Chiga, Colognian, Cornish, Croatian, Czech, Danish, Duala, Dutch, Embu, English, Esperanto, Estonian, Ewe, Ewondo, Faroese, Filipino, Finnish, French, Friulian, Fulah, Galician, Ganda, German, Greek, Gusii, Hausa, Hawaiian, Hungarian, Icelandic, Igbo, Inari Sami, Indonesian, Interlingua, Irish, Italian, Javanese, Jola-Fonyi, Kabuverdianu, Kabyle, Kako, Kalaallisut, Kalenjin, Kamba, Kazakh, Kikuyu, Kinyarwanda, Koyra Chiini, Koyraboro Senni, Kurdish, Kwasio, Kyrgyz, Lakota, Langi, Latvian, Lingala, Lithuanian, Low German, Lower Sorbian, Luba-Katanga, Luo, Luxembourgish, Luyia, Macedonian, Machame, Makhuwa-Meetto, Makonde, Malagasy, Malay, Maltese, Manx, Maori, Masai, Meru, Meta\u02bc, Mongolian, Morisyen, Mundang, Nama, Ngiemboon, Nigerian Pidgin, North Ndebele, Northern Sami, Norwegian Bokm\u00e5l, Norwegian Nynorsk, Nuer, Nyankole, Oromo, Ossetic, Polish, Portuguese, Prussian, Quechua, Romanian, Romansh, Rombo, Rundi, Russian, Rwa, Sakha, Samburu, Sango, Sangu, Scottish Gaelic, Sena, Serbian, Shambala, Shona, Slovak, Slovenian, Soga, Somali, Spanish, Sundanese, Swahili, Swedish, Swiss German, Tachelhit\u00a0(shi_latn), Taita, Tajik, Tasawaq, Tatar, Teso, Tongan, Turkish, Turkmen, Ukrainian, Upper Sorbian, Uzbek, Vai\u00a0(vai_latn), Vietnamese, Volap\u00fck, Vunjo, Walser, Welsh, Western Frisian, Wolof, Xhosa, Yangben, Yoruba, Zarma, Zulu</p>"},{"location":"fonts/iosevka/#stylistic-sets","title":"Stylistic Sets","text":"<p>Monospace Iosevka contains various stylistic sets to change the shape of certain characters. Enabling corresponded OpenType feature to enable.</p> <code>ss01</code> Andale Mono Style <code>ss02</code> Anonymous Pro Style <code>ss03</code> Consolas Style <code>ss04</code> Menlo Style <code>ss05</code> Fira Mono Style <code>ss06</code> Liberation Mono Style <code>ss07</code> Monaco Style <code>ss08</code> Pragmata Pro Style <code>ss09</code> Source Code Pro Style <code>ss10</code> Envy Code R Style <code>ss11</code> X Window Style <code>ss12</code> Ubuntu Mono Style <code>ss13</code> Lucida Style <code>ss14</code> JetBrains Mono Style <code>ss20</code> Curly Style"},{"location":"fonts/iosevka/#character-variants","title":"Character Variants","text":"<p>Alongside stylistic sets, Monospace Iosevka can also be configured to cherry-pick variants for each character using OpenType. The variants are shown below. To enable, assign the feature tag to the variant index. For example, setting <code>cv11</code> to <code>2</code> will enable single-storey <code>a</code>.</p> <p>Caution :  Certain software may limit the quantity of OpenType features and drop some of them if the feature list is too long. Please validate your feature configuration to ensure that it worked in your software.</p> <p></p>"},{"location":"fonts/iosevka/#ligations","title":"Ligations","text":"<p>Monospace subfamilies support ligations. Iosevka\u2019s default ligation set is assigned to <code>calt</code> feature, though not all of them are enabled by default.</p> <code>calt off Ligation Off <code>calt</code> Default setting in text editors <p>Iosevka supports Language-Specific Ligations, which is the ligation set enabled only under certain languages. These ligation sets are assigned to custom feature tags. To use them, you need to turn off <code>calt</code> and enable the corresponded feature. The feature list is:</p> <code>dlig</code> Discretionary ligatures <code>CLIK</code>; <code>JSPT</code>; <code>PHPX</code> C-Like, JavaScript, PHP <code>MLXX</code>; <code>FSHP</code> ML, F# <code>FSTA</code> F* <code>HSKL</code>; <code>IDRS</code>; <code>ELMX</code>; <code>PURS</code> Haskell, Idris, Elm, PureScript <code>SWFT</code> Swift <code>COQX</code> Coq <code>MTLB</code> Matlab <code>VRLG</code> Verilog <code>WFLM</code> Wolfram Language (Mathematica) <p>Please note that, due to the complex interactions when forming ligations, cherry-picking ligation groups will require a custom Iosevka build. The instructions could be seen below.</p>"},{"location":"fonts/iosevka/#building-from-source","title":"Building from Source","text":"<p>To build Iosevka you should:</p> <ol> <li>Ensure that <code>nodejs</code> (\u2265 12.16.0) and <code>ttfautohint</code> are present.</li> <li>Install necessary libs by <code>npm install</code>. If you\u2019ve installed them, upgrade to the latest.</li> <li><code>npm run build -- contents::iosevka</code>.</li> </ol> <p>You will find TTFs, as well as WOFF(2) web fonts and one Webfont CSS in the <code>dist/</code> directory.</p>"},{"location":"fonts/iosevka/#using-a-docker-container","title":"Using a Docker container","text":"<p>A Docker container handling the build environment for you can be found here.</p> <p>To pull it from Docker Hub and start a standard build of the latest released version, run</p> <pre><code>docker run -it -v $(pwd):/build avivace/iosevka-build\n</code></pre> <p>Fonts files will be placed in the <code>dist</code> folder.</p> <p>You can provide <code>private-build.plans.toml</code> for a customized build and/or specify the desired release appending <code>-e FONT_VERSION=X.X.X</code>. to the Docker command.</p>"},{"location":"fonts/iosevka/#customized-build","title":"Customized Build","text":"<p>To create a custom build, you need:</p> <ol> <li> <p>Create <code>private-build-plans.toml</code> file if absent.</p> </li> <li> <p>Add a build plan into <code>private-build-plans.toml</code>. The configurable properties are described in the following sections.</p> </li> <li> <p>Run <code>npm run build -- contents::&lt;your plan name&gt;</code> and the built fonts would be available in <code>dist/</code>. Aside from <code>contents::&lt;plan&gt;</code>, other options are:</p> </li> <li> <p><code>contents::&lt;plan&gt;</code> : TTF (Hinted and Unhinted), WOFF(2) and Web font CSS;</p> </li> <li><code>ttf::&lt;plan&gt;</code> : TTF;</li> <li><code>ttf-unhinted::&lt;plan&gt;</code> : Unhinted TTF only;</li> <li><code>woff::&lt;plan&gt;</code> : TTF and WOFF only;</li> <li><code>woff2::&lt;plan&gt;</code> : TTF and WOFF2 only.</li> </ol>"},{"location":"fonts/iosevka/#configuring-custom-build","title":"Configuring Custom Build","text":"<p>Configuration of build plans are organized under <code>[buildPlans.&lt;plan name&gt;]</code> sections in the <code>private-build-plans.toml</code>. Inside the plan, top-level properties include:</p> <ul> <li><code>family</code>: String, defines the family name of your custom variant.</li> <li><code>spacing</code>: Optional, String, denotes the spacing of the custom variant. Valid values include:</li> <li><code>term</code>: Make the symbols' width suitable for terminal emulators. Arrows and geometric symbols will become narrower.</li> <li><code>fontconfig-mono</code>: Apply <code>term</code> spacing changes and further apply changes to be compatible with FontConfig's Mono spacing, which recognizes a font as monospace if and only if its every non-combining characters having the same width. The changes include:<ul> <li>Completely remove wide glyphs. All non-combining glyphs will be exactly the same width.</li> <li>As a consequence, the following characters will be removed:<ul> <li><code>U+27F5</code> LONG LEFTWARDS ARROW</li> <li><code>U+27F6</code> LONG RIGHTWARDS ARROW</li> </ul> </li> <li>Remove <code>NWID</code> and <code>WWID</code> OpenType feature.</li> </ul> </li> <li><code>fixed</code>: Apply <code>fontconfig-mono</code> changes and further remove ligations.</li> <li><code>serifs</code>: Optional, String, configures style of serifs.</li> <li>When set to <code>slab</code>, the font will be converted into slab-serif.</li> <li>Otherwise the font will be sans-serif.</li> <li><code>no-cv-ss</code>: Optional, Boolean, disables <code>cv##</code> and <code>ss##</code> OpenType features.</li> <li><code>no-ligation</code>: Optional, Boolean, disables ligations.</li> </ul> <p>Build plan could have 5 optional subsections: <code>ligations</code>, <code>variants</code>, <code>weights</code>, <code>widths</code> and <code>slopes</code>.</p>"},{"location":"fonts/iosevka/#configuring-ligations","title":"Configuring Ligations","text":"<p>Subsection <code>ligations</code> is used to customize the ligation set assigned to <code>calt</code> OpenType feature. Properties include:</p> <ul> <li> <p><code>inherits</code>: Optional, String, defines the inherited ligation set. When absent, the ligation set will not inherit any other sets. Valid values are:</p> </li> <li> <p><code>default-calt</code>: Inherit default ligation set.</p> </li> <li><code>dlig</code>: Default ligation set would be assigned to Discretionary ligatures.</li> <li><code>clike</code>: Default ligation set would be assigned to C-Like.</li> <li><code>javascript</code>: Default ligation set would be assigned to JavaScript.</li> <li><code>php</code>: Default ligation set would be assigned to PHP.</li> <li><code>ml</code>: Default ligation set would be assigned to ML.</li> <li><code>fsharp</code>: Default ligation set would be assigned to F#.</li> <li><code>fstar</code>: Default ligation set would be assigned to F*.</li> <li><code>haskell</code>: Default ligation set would be assigned to Haskell.</li> <li><code>idris</code>: Default ligation set would be assigned to Idris.</li> <li><code>elm</code>: Default ligation set would be assigned to Elm.</li> <li><code>purescript</code>: Default ligation set would be assigned to PureScript.</li> <li><code>swift</code>: Default ligation set would be assigned to Swift.</li> <li><code>coq</code>: Default ligation set would be assigned to Coq.</li> <li><code>matlab</code>: Default ligation set would be assigned to Matlab.</li> <li><code>verilog</code>: Default ligation set would be assigned to Verilog.</li> <li><code>wolfram</code>: Default ligation set would be assigned to Wolfram Language (Mathematica).</li> </ul> <ul> <li> <p><code>disables</code> and <code>enables</code>: Optional, String Array, Cherry-picking ligation groups to be disabled or enabled. Valid values include:</p> </li> <li> <p><code>center-ops</code>: Vertically align some of the operators (like <code>*</code>) to the center position it is before or after a \"center\" operator (like <code>+</code>).</p> </li> <li><code>arrow</code>: Enable ligation set that forms arrows.</li> <li><code>arrow2</code>: Enable ligation for more arrows, like <code>&gt;&gt;=</code>.</li> <li><code>trig</code>: Enable ligation for <code>&lt;|</code>, <code>|&gt;</code> , <code>&lt;||</code>, and other bar-and-angle-bracket symbols.</li> <li><code>eqeqeq</code>: Enable special ligation for <code>===</code> with triple lines.</li> <li><code>eqeq</code>: Enable ligation for <code>==</code> and <code>===</code>.</li> <li><code>ineq</code>: Enable ligation for <code>&lt;=</code> and <code>&gt;=</code>.</li> <li><code>exeqeq</code>: Enable special ligation for <code>!==</code> with triple lines.</li> <li><code>exeqeq-dotted</code>: Enable special ligation for <code>!==</code> with triple lines, and a dot at below for distinction.</li> <li><code>eqexeq</code>: Enable special ligation for <code>=!=</code> with triple lines.</li> <li><code>eqexeq-dotted</code>: Enable special ligation for <code>=!=</code> with triple lines and a dot at below for distinction.</li> <li><code>eqexeq-dl</code>: Enable special ligation for <code>=!=</code> with double lines.</li> <li><code>eqexeq-dl-dotted</code>: Enable special ligation for <code>=!=</code> with double lines, and a dot at below for distinction.</li> <li><code>exeq</code>: Enable ligation for <code>!=</code> and <code>!==</code>.</li> <li><code>exeq-dotted</code>: Enable ligation for <code>!=</code> and <code>!==</code> with a dot at below for distinction.</li> <li><code>tildeeq</code>: Enable ligation for <code>~=</code> as inequality.</li> <li><code>eqslasheq</code>: Enable special triple-line ligation for <code>=/=</code> as inequality.</li> <li><code>slasheq</code>: Enable ligation for <code>/=</code> and <code>=/=</code> as inequality.</li> <li><code>ltgt-ne</code>: Enable ligation for <code>&lt;&gt;</code> as inequality.</li> <li><code>ltgt-diamond</code>: Enable ligation for <code>&lt;&gt;</code> as diamond.</li> <li><code>brst</code>: Center asterisk in <code>(*</code> and <code>*)</code>.</li> <li><code>plusplus</code>: Enable ligation for <code>++</code> and further plus-chaining.</li> <li><code>kern-dotty</code>: Move connecting dotty punctuations closer, like for <code>::</code>, <code>:::</code> and <code>...</code>.</li> <li><code>logic</code>: Enable ligation for <code>/\\</code> and <code>\\/</code>.</li> <li><code>llgg</code>: Enable ligation for <code>&lt;&lt;</code>, <code>&gt;&gt;</code> and other angle-bracket chaining.</li> <li><code>llggeq</code>: Enable ligation for <code>&lt;&lt;=</code>, <code>&gt;&gt;=</code> as shift operator.</li> <li><code>dot-as-operator</code>: Treat dot (<code>.</code>) as operator and perform chained centering.</li> <li><code>lteq-as-arrow</code>: Treat <code>&lt;=</code> as arrow.</li> <li><code>gteq-as-co-arrow</code>: Treat <code>&gt;=</code> as co-arrow.</li> <li><code>html-comment</code>: Enable ligation for <code>&lt;!--</code> and <code>&lt;!---</code>.</li> <li><code>colon-greater-as-colon-arrow</code>: Transform <code>:&gt;</code> into <code>:</code> and a narrow arrow..</li> </ul>"},{"location":"fonts/iosevka/#configuring-character-variants","title":"Configuring Character Variants","text":"<p>Subsection <code>variants</code> is used to configure character variants in the font. Properties include:</p> <ul> <li> <p><code>inherits</code>: Optional, String, defines the inherited stylistic set. Valid options include:</p> </li> <li> <p><code>ss01</code>: Set character variant to \u201cAndale Mono Style\u201d.</p> </li> <li><code>ss02</code>: Set character variant to \u201cAnonymous Pro Style\u201d.</li> <li><code>ss03</code>: Set character variant to \u201cConsolas Style\u201d.</li> <li><code>ss04</code>: Set character variant to \u201cMenlo Style\u201d.</li> <li><code>ss05</code>: Set character variant to \u201cFira Mono Style\u201d.</li> <li><code>ss06</code>: Set character variant to \u201cLiberation Mono Style\u201d.</li> <li><code>ss07</code>: Set character variant to \u201cMonaco Style\u201d.</li> <li><code>ss08</code>: Set character variant to \u201cPragmata Pro Style\u201d.</li> <li><code>ss09</code>: Set character variant to \u201cSource Code Pro Style\u201d.</li> <li><code>ss10</code>: Set character variant to \u201cEnvy Code R Style\u201d.</li> <li><code>ss11</code>: Set character variant to \u201cX Window Style\u201d.</li> <li><code>ss12</code>: Set character variant to \u201cUbuntu Mono Style\u201d.</li> <li><code>ss13</code>: Set character variant to \u201cLucida Style\u201d.</li> <li><code>ss14</code>: Set character variant to \u201cJetBrains Mono Style\u201d.</li> <li><code>ss20</code>: Set character variant to \u201cCurly Style\u201d.</li> </ul> <ul> <li><code>design</code>, <code>upright</code>, <code>italic</code>, and <code>oblique</code>: Optional, Dictionary, defines styles for individual characters. The choices are organized in key-value pairs, assigning a variant to a character group. Alternatively, you could assign numbers to <code>cv##</code> tags, like what you did when using OpenType in CSS. Assignments under <code>design</code> will be applied to all the slopes, and <code>upright</code>, <code>italic</code>, and <code>oblique</code> will apply to corresponded slopes. </li> </ul> <p>In addition, style selector for default digit form also uses these dictionaries.</p> <p>The valid combinations include:</p> <ul> <li>Default digit form:<ul> <li><code>digit-form = 'lining'</code>: Lining (default).</li> <li><code>digit-form = 'old-style'</code>: Old-style.</li> </ul> </li> <li>Styles for <code>A</code>, <code>\u039b</code>, <code>\u0394</code>:<ul> <li><code>turn-v = 'straight'</code>, <code>cv01 = 1</code>: Standard, straight\u00a0<code>A</code>, <code>\u039b</code>, <code>\u0394</code> (default).</li> <li><code>turn-v = 'curly'</code>, <code>cv01 = 2</code>: Slightly curly <code>A</code>, <code>\u039b</code>, <code>\u0394</code>,\u00a0like Iosevka 2.x.</li> </ul> </li> <li>Styles for <code>B</code>:<ul> <li><code>capital-b = 'standard'</code>, <code>cv02 = 1</code>: Standard <code>B</code> (default).</li> <li><code>capital-b = 'more-asymmetric'</code>, <code>cv02 = 2</code>: More asymmetric <code>B</code> to differentiate with <code>8</code>.</li> </ul> </li> <li>Styles for <code>D</code>:<ul> <li><code>capital-d = 'standard'</code>, <code>cv03 = 1</code>: Standard <code>D</code> (default).</li> <li><code>capital-d = 'more-rounded'</code>, <code>cv03 = 2</code>: More rounded <code>D</code> to differentiate with <code>O</code>.</li> </ul> </li> <li>Styles for <code>G</code>:<ul> <li><code>capital-g = 'toothed'</code>, <code>cv04 = 1</code>: Toothed G (default).</li> <li><code>capital-g = 'toothless-corner'</code>, <code>cv04 = 2</code>: Corner toothless G.</li> <li><code>capital-g = 'toothless-rounded'</code>, <code>cv04 = 3</code>: Round toothless G.</li> </ul> </li> <li>Styles for <code>I</code>:<ul> <li><code>capital-i = 'serifed'</code>, <code>cv05 = 1</code>: I with standard (long) serifs (default).</li> <li><code>capital-i = 'serifless'</code>, <code>cv05 = 2</code>: I without serifs, like a straight bar.</li> <li><code>capital-i = 'short-serifed'</code>, <code>cv05 = 3</code>: I with short serifs.</li> </ul> </li> <li>Styles for <code>J</code>:<ul> <li><code>capital-j = 'serifless'</code>, <code>cv06 = 1</code>: J without top serif.</li> <li><code>capital-j = 'serifed'</code>, <code>cv06 = 2</code>: J with top serif at left side (default).</li> <li><code>capital-j = 'serifed-both-sides'</code>, <code>cv06 = 3</code>: J with symmetric at both sides.</li> <li><code>capital-j = 'serifed-symmetric'</code>, <code>cv06 = 4</code>: J with symmetric at both sides and is symmetric.</li> </ul> </li> <li>Styles for <code>K</code>:<ul> <li><code>capital-k = 'straight'</code>, <code>cv07 = 1</code>: <code>K</code> with standard shape (default).</li> <li><code>capital-k = 'curly'</code>, <code>cv07 = 2</code>: Slightly curly <code>K</code>,\u00a0like Iosevka 2.x.</li> </ul> </li> <li>Styles for <code>M</code>:<ul> <li><code>capital-m = 'hanging'</code>, <code>cv08 = 1</code>: <code>M</code> with middle being hanging off baseline (default).</li> <li><code>capital-m = 'flat-bottom'</code>, <code>cv08 = 2</code>: <code>M</code> with middle aligned to baseline.</li> </ul> </li> <li>Styles for <code>Q</code>:<ul> <li><code>capital-q = 'taily'</code>, <code>cv09 = 1</code>: <code>Q</code> with a curly tail (default).</li> <li><code>capital-q = 'straight'</code>, <code>cv09 = 2</code>: <code>Q</code> with a straight tail like in the old versions.</li> <li><code>capital-q = 'crossing'</code>, <code>cv09 = 3</code>: <code>Q</code> with a tail crossing the ring.</li> </ul> </li> <li>Styles for <code>R</code>:<ul> <li><code>capital-r = 'straight'</code>, <code>cv10 = 1</code>: Standard, straight-leg <code>R</code> (default).</li> <li><code>capital-r = 'curly'</code>, <code>cv10 = 2</code>: \u00a0Slightly curly-legged <code>R</code>, like Iosevka 2.x.</li> </ul> </li> <li>Styles for <code>Y</code>:<ul> <li><code>capital-y = 'straight'</code>, <code>cv11 = 1</code>: Standard, straight <code>Y</code> (default).</li> <li><code>capital-y = 'curly'</code>, <code>cv11 = 2</code>: Slightly curly <code>Y</code>, like Iosevka 2.x.</li> </ul> </li> <li>Styles for <code>a</code>:<ul> <li><code>a = 'doublestorey'</code>, <code>cv12 = 1</code>: Double-storey <code>a</code> (default for Upright).</li> <li><code>a = 'doublestorey-tailed'</code>, <code>cv12 = 2</code>: Double-storey <code>a</code> with curly tail.</li> <li><code>a = 'doublestorey-toothless-corner'</code>, <code>cv12 = 3</code>: Toothless (cornered bottom-right) double-storey <code>a</code>.</li> <li><code>a = 'doublestorey-toothless-rounded'</code>, <code>cv12 = 4</code>: Toothless (rounded bottom-right) double-storey <code>a</code>.</li> <li><code>a = 'singlestorey'</code>, <code>cv12 = 5</code>: Single-storey <code>a</code>.</li> <li><code>a = 'singlestorey-tailed'</code>, <code>cv12 = 6</code>: Single-storey <code>a</code> with curly tail (default for Italic).</li> <li><code>a = 'singlestorey-earless-corner'</code>, <code>cv12 = 7</code>: Earless (cornered top-right) single-storey <code>a</code>.</li> <li><code>a = 'singlestorey-earless-corner-tailed'</code>, <code>cv12 = 8</code>: Earless (cornered top-right) single-storey <code>a</code> with curly tail.</li> <li><code>a = 'singlestorey-earless-rounded'</code>, <code>cv12 = 9</code>: Earless (rounded top-right) single-storey <code>a</code>.</li> <li><code>a = 'singlestorey-earless-rounded-tailed'</code>, <code>cv12 = 10</code>: Earless (rounded top-right) single-storey <code>a</code> with curly tail.</li> </ul> </li> <li>Styles for <code>b</code>:<ul> <li><code>b = 'toothed'</code>, <code>cv13 = 1</code>: <code>b</code> with bottom-left tooth (default).</li> <li><code>b = 'toothless-corner'</code>, <code>cv13 = 2</code>: <code>b</code> without bottom-left tooth, with a corner transition.</li> <li><code>b = 'toothless-rounded'</code>, <code>cv13 = 3</code>: <code>b</code> without bottom-left tooth, with a rounded transition.</li> </ul> </li> <li>Styles for <code>d</code>:<ul> <li><code>d = 'toothed'</code>, <code>cv14 = 1</code>: <code>d</code> with bottom-right tooth (default for Upright).</li> <li><code>d = 'toothless-corner'</code>, <code>cv14 = 2</code>: <code>d</code> without bottom-right tooth, with a corner transition.</li> <li><code>d = 'toothless-rounded'</code>, <code>cv14 = 3</code>: <code>d</code> without bottom-right tooth, with a rounded transition.</li> <li><code>d = 'tailed'</code>, <code>cv14 = 4</code>: <code>d</code> with a slightly tail bottom-right tail (default for Italic).</li> </ul> </li> <li>Styles for <code>f</code>:<ul> <li><code>f = 'serifless'</code>, <code>cv15 = 1</code>: <code>f</code> without bottom serif, hook or exension (default for Sans Upright).</li> <li><code>f = 'serifed'</code>, <code>cv15 = 2</code>: <code>f</code> with bottom serif (default for Slab Upright).</li> <li><code>f = 'tailed'</code>, <code>cv15 = 3</code>: <code>f</code> with bottom hook.</li> <li><code>f = 'extended'</code>, <code>cv15 = 4</code>: <code>f</code> with bar extended to descender.</li> <li><code>f = 'serifless-crossbar-at-x-height'</code>, <code>cv15 = 5</code>: <code>f</code> without bottom serif, hook or exension; crossbar is placed right at X-height.</li> <li><code>f = 'serifed-crossbar-at-x-height'</code>, <code>cv15 = 6</code>: <code>f</code> with bottom serif; crossbar is placed right at X-height.</li> <li><code>f = 'tailed-crossbar-at-x-height'</code>, <code>cv15 = 7</code>: <code>f</code> with bottom hook; crossbar is placed right at X-height.</li> <li><code>f = 'extended-crossbar-at-x-height'</code>, <code>cv15 = 8</code>: <code>f</code> with bar extended to descender; crossbar is placed right at X-height.</li> <li><code>f = 'flat-hook'</code>, <code>cv15 = 9</code>: <code>f</code> with flat top hook, without bottom serif, hook or exension.</li> <li><code>f = 'flat-hook-serifed'</code>, <code>cv15 = 10</code>: <code>f</code> with flat top hook and bottom serif.</li> <li><code>f = 'flat-hook-tailed'</code>, <code>cv15 = 11</code>: <code>f</code> with flat top hook and bottom hook (default for Italic).</li> <li><code>f = 'flat-hook-extended'</code>, <code>cv15 = 12</code>: <code>f</code> with flat top hook and bar extended to descender.</li> <li><code>f = 'flat-hook-crossbar-at-x-height'</code>, <code>cv15 = 13</code>: <code>f</code> with flat top hook, without bottom serif, hook or exension; crossbar is placed right at X-height.</li> <li><code>f = 'flat-hook-serifed-crossbar-at-x-height'</code>, <code>cv15 = 14</code>: <code>f</code> with flat top hook, bottom serif; crossbar is placed right at X-height.</li> <li><code>f = 'flat-hook-tailed-crossbar-at-x-height'</code>, <code>cv15 = 15</code>: <code>f</code> with flat top hook, bottom hook; crossbar is placed right at X-height.</li> <li><code>f = 'flat-hook-extended-crossbar-at-x-height'</code>, <code>cv15 = 16</code>: <code>f</code> with flat top hook, bar extended to descender; crossbar is placed right at X-height.</li> </ul> </li> <li>Styles for <code>g</code>:<ul> <li><code>g = 'singlestorey'</code>, <code>cv16 = 1</code>: Single-storey <code>g</code> (default).</li> <li><code>g = 'doublestorey'</code>, <code>cv16 = 2</code>: Double-storey <code>g</code>.</li> <li><code>g = 'opendoublestorey'</code>, <code>cv16 = 3</code>: Open Double-storey <code>g</code>, like Trebuchet MS or Fira Code.</li> <li><code>g = 'earless-corner'</code>, <code>cv16 = 4</code>: Earless (cornered top-right) single-storey <code>g</code>.</li> <li><code>g = 'earless-rounded'</code>, <code>cv16 = 5</code>: Earless (rounded top-right) single-storey <code>g</code>.</li> </ul> </li> <li>Styles for <code>h</code>:<ul> <li><code>h = 'straight'</code>, <code>cv17 = 1</code>: <code>h</code> with straight ending (default).</li> <li><code>h = 'tailed'</code>, <code>cv17 = 2</code>: <code>h</code> with curly tailed ending.</li> <li><code>h = 'motion-serifed-straight'</code>, <code>cv17 = 3</code>: <code>h</code> with straight ending.</li> <li><code>h = 'motion-serifed-tailed'</code>, <code>cv17 = 4</code>: <code>h</code> with curly tailed ending.</li> </ul> </li> <li>Styles for <code>i</code>:<ul> <li><code>i = 'serifed'</code>, <code>cv18 = 1</code>: Serifed <code>i</code> (default for Upright).</li> <li><code>i = 'serifless'</code>, <code>cv18 = 2</code>: <code>i</code> like a straight line.</li> <li><code>i = 'hooky'</code>, <code>cv18 = 3</code>: Hooky <code>i</code>.</li> <li><code>i = 'zshaped'</code>, <code>cv18 = 4</code>: Z-shaped <code>i</code>.</li> <li><code>i = 'hooky-bottom'</code>, <code>cv18 = 5</code>: <code>i</code> with a straight tail.</li> <li><code>i = 'serifed-asymmetric'</code>, <code>cv18 = 6</code>: <code>i</code> with shorter top serif and full bottom serif.</li> <li><code>i = 'tailed'</code>, <code>cv18 = 7</code>: <code>i</code> with curly tail.</li> <li><code>i = 'serifed-tailed'</code>, <code>cv18 = 8</code>: <code>i</code> with curly tail and top serif (default for Italic).</li> <li><code>i = 'flat-tailed'</code>, <code>cv18 = 9</code>: <code>i</code> with top serif and a curly-then-flat tail.</li> <li><code>i = 'serifed-flat-tailed'</code>, <code>cv18 = 10</code>: <code>i</code> with top serif and a curly-then-flat tail.</li> </ul> </li> <li>Styles for <code>j</code>:<ul> <li><code>j = 'serifed'</code>, <code>cv19 = 1</code>: <code>j</code> with top serif (default).</li> <li><code>j = 'serifless'</code>, <code>cv19 = 2</code>: <code>j</code> without serif.</li> <li><code>j = 'straight-line'</code>, <code>cv19 = 3</code>: <code>j</code> like a straight line.</li> <li><code>j = 'flat-hook-serifed'</code>, <code>cv19 = 4</code>: undefined.</li> <li><code>j = 'flat-hook-serifless'</code>, <code>cv19 = 5</code>: undefined.</li> </ul> </li> <li>Styles for <code>k</code>:<ul> <li><code>k = 'straight'</code>, <code>cv20 = 1</code>: <code>k</code> with standard shape (default for Upright).</li> <li><code>k = 'curly'</code>, <code>cv20 = 2</code>: Slightly curly <code>k</code>, like Iosevka 2.x.</li> <li><code>k = 'cursive'</code>, <code>cv20 = 3</code>: <code>k</code> with a cursive loop (default for Italic).</li> </ul> </li> <li>Styles for <code>l</code>:<ul> <li><code>l = 'serifed'</code>, <code>cv21 = 1</code>: Serifed <code>l</code> (default for Upright).</li> <li><code>l = 'serifless'</code>, <code>cv21 = 2</code>: <code>l</code> like a straight line.</li> <li><code>l = 'hooky'</code>, <code>cv21 = 3</code>: Hooky <code>l</code>.</li> <li><code>l = 'zshaped'</code>, <code>cv21 = 4</code>: Z-shaped <code>l</code>.</li> <li><code>l = 'hooky-bottom'</code>, <code>cv21 = 5</code>: <code>l</code> with a straight tail.</li> <li><code>l = 'serifed-asymmetric'</code>, <code>cv21 = 6</code>: <code>l</code> with shorter top serif and full bottom serif.</li> <li><code>l = 'tailed'</code>, <code>cv21 = 7</code>: <code>l</code> with curly tail.</li> <li><code>l = 'serifed-tailed'</code>, <code>cv21 = 8</code>: <code>l</code> with top serif and curly tail (default for Italic).</li> <li><code>l = 'flat-tailed'</code>, <code>cv21 = 9</code>: <code>l</code> with top serif and a curly-then-flat tail.</li> <li><code>l = 'serifed-flat-tailed'</code>, <code>cv21 = 10</code>: <code>l</code> with top serif and a curly-then-flat tail.</li> </ul> </li> <li>Styles for <code>m</code>:<ul> <li><code>m = 'normal'</code>, <code>cv22 = 1</code>: <code>m</code> with normal middle leg, touching the baseline (default).</li> <li><code>m = 'shortleg'</code>, <code>cv22 = 2</code>: <code>m</code> with shorter middle leg, like Ubuntu Mono.</li> <li><code>m = 'tailed'</code>, <code>cv22 = 3</code>: <code>m</code> with normal middle leg, touching the baseline, and a curly tail.</li> <li><code>m = 'shortleg-tailed'</code>, <code>cv22 = 4</code>: <code>m</code> with shorter middle leg, like Ubuntu Mono, and a curly tail.</li> <li><code>m = 'earless-corner-double-arch'</code>, <code>cv22 = 5</code>: Earless (corner top-left) <code>m</code> with normal middle leg touching baseline.</li> <li><code>m = 'earless-corner-double-arch-shortleg'</code>, <code>cv22 = 6</code>: Earless (corner top-left) <code>m</code> with a shorter middle leg like Ubuntu Mono.</li> <li><code>m = 'earless-corner-double-arch-tailed'</code>, <code>cv22 = 7</code>: Earless (corner top-left) <code>m</code> with normal middle leg touching baseline, and a curly tail.</li> <li><code>m = 'earless-corner-double-arch-shortleg-tailed'</code>, <code>cv22 = 8</code>: Earless (corner top-left) <code>m</code> with a shorter middle leg like Ubuntu Mono, and a curly tail.</li> <li><code>m = 'earless-rounded-double-arch'</code>, <code>cv22 = 9</code>: Earless (rounded top-left) <code>m</code> with normal middle leg touching baseline.</li> <li><code>m = 'earless-rounded-double-arch-shortleg'</code>, <code>cv22 = 10</code>: Earless (rounded top-left) <code>m</code> with a shorter middle leg like Ubuntu Mono.</li> <li><code>m = 'earless-rounded-double-arch-tailed'</code>, <code>cv22 = 11</code>: Earless (rounded top-left) <code>m</code> with normal middle leg touching baseline, and a curly tail.</li> <li><code>m = 'earless-rounded-double-arch-shortleg-tailed'</code>, <code>cv22 = 12</code>: Earless (rounded top-left) <code>m</code> with a shorter middle leg like Ubuntu Mono, and a curly tail.</li> <li><code>m = 'earless-single-arch'</code>, <code>cv22 = 13</code>: Earless (single-arch) <code>m</code> with normal middle leg touching baseline.</li> <li><code>m = 'earless-single-arch-shortleg'</code>, <code>cv22 = 14</code>: Earless (single-arch) <code>m</code> with a shorter middle leg like Ubuntu Mono.</li> <li><code>m = 'earless-single-arch-tailed'</code>, <code>cv22 = 15</code>: Earless (single-arch) <code>m</code> with normal middle leg touching baseline, and a curly tail.</li> <li><code>m = 'earless-single-arch-shortleg-tailed'</code>, <code>cv22 = 16</code>: Earless (single-arch) <code>m</code> with a shorter middle leg like Ubuntu Mono, and a curly tail.</li> <li><code>m = 'motion-serifed'</code>, <code>cv22 = 17</code>: <code>m</code> with motion serifs, normal middle leg touching baseline.</li> <li><code>m = 'motion-serifed-shortleg'</code>, <code>cv22 = 18</code>: <code>m</code> with motion serifs, a shorter middle leg like Ubuntu Mono.</li> <li><code>m = 'motion-serifed-tailed'</code>, <code>cv22 = 19</code>: <code>m</code> with motion serifs, normal middle leg touching baseline, and a curly tail.</li> <li><code>m = 'motion-serifed-shortleg-tailed'</code>, <code>cv22 = 20</code>: <code>m</code> with motion serifs, a shorter middle leg like Ubuntu Mono, and a curly tail.</li> </ul> </li> <li>Styles for <code>n</code>:<ul> <li><code>n = 'straight'</code>, <code>cv23 = 1</code>: <code>n</code> with straight ending (default).</li> <li><code>n = 'tailed'</code>, <code>cv23 = 2</code>: <code>n</code> with a curly tail.</li> <li><code>n = 'earless-corner-straight'</code>, <code>cv23 = 3</code>: Earless (corner top-left) <code>n</code> with straight ending.</li> <li><code>n = 'earless-corner-tailed'</code>, <code>cv23 = 4</code>: Earless (corner top-left) <code>n</code> with a curly tail.</li> <li><code>n = 'earless-rounded-straight'</code>, <code>cv23 = 5</code>: Earless (rounded top-left) <code>n</code> with straight ending.</li> <li><code>n = 'earless-rounded-tailed'</code>, <code>cv23 = 6</code>: Earless (rounded top-left) <code>n</code> with a curly tail.</li> <li><code>n = 'motion-serifed-straight'</code>, <code>cv23 = 7</code>: <code>n</code> with motion serifs and straight ending.</li> <li><code>n = 'motion-serifed-tailed'</code>, <code>cv23 = 8</code>: <code>n</code> with motion serifs and a curly tail.</li> </ul> </li> <li>Styles for <code>p</code>:<ul> <li><code>p = 'eared'</code>, <code>cv24 = 1</code>: <code>p</code> with top-left ear (default).</li> <li><code>p = 'earless-corner'</code>, <code>cv24 = 2</code>: <code>p</code> without top-left ear (corner).</li> <li><code>p = 'earless-rounded'</code>, <code>cv24 = 3</code>: <code>p</code> without top-left ear (rounded).</li> <li><code>p = 'motion-serifed'</code>, <code>cv24 = 4</code>: <code>p</code> with motion serifs.</li> </ul> </li> <li>Styles for <code>q</code>:<ul> <li><code>q = 'straight'</code>, <code>cv25 = 1</code>: <code>q</code> with straight bar (default).</li> <li><code>q = 'tailed'</code>, <code>cv25 = 2</code>: <code>q</code> with tail.</li> <li><code>q = 'earless-corner'</code>, <code>cv25 = 3</code>: Earless (cornered top-left) single-storey <code>q</code>.</li> <li><code>q = 'earless-corner-tailed'</code>, <code>cv25 = 4</code>: Earless (cornered top-left) single-storey <code>q</code> with curly tail.</li> <li><code>q = 'earless-rounded'</code>, <code>cv25 = 5</code>: Earless (rounded top-left) single-storey <code>q</code>.</li> <li><code>q = 'earless-rounded-tailed'</code>, <code>cv25 = 6</code>: Earless (rounded top-left) single-storey <code>q</code> with curly tail.</li> </ul> </li> <li>Styles for <code>r</code>:<ul> <li><code>r = 'serifless'</code>, <code>cv26 = 1</code>: Straight, serif-less <code>r</code> (default for Sans).</li> <li><code>r = 'serifed'</code>, <code>cv26 = 2</code>: <code>r</code> with serif at both top and bottom (default for Slab Upright).</li> <li><code>r = 'top-serifed'</code>, <code>cv26 = 3</code>: <code>r</code>\u00a0with serifs at top-left only (default for Slab Italic).</li> <li><code>r = 'earless-corner'</code>, <code>cv26 = 4</code>: Earless (corner top-left), serif-less <code>r</code>.</li> <li><code>r = 'earless-corner-serifed'</code>, <code>cv26 = 5</code>: Earless (corner top-left), serifed <code>r</code>.</li> <li><code>r = 'earless-rounded'</code>, <code>cv26 = 6</code>: Earless (rounded top-left), serif-less <code>r</code>.</li> <li><code>r = 'earless-rounded-serifed'</code>, <code>cv26 = 7</code>: Earless (rounded top-left), serifed <code>r</code>.</li> </ul> </li> <li>Styles for <code>t</code>:<ul> <li><code>t = 'standard'</code>, <code>cv27 = 1</code>: Standard <code>t</code> shape (default).</li> <li><code>t = 'cross'</code>, <code>cv27 = 2</code>: Futura-like <code>t</code> shape.</li> <li><code>t = 'flat-hook'</code>, <code>cv27 = 3</code>: <code>t</code> with flat hook.</li> <li><code>t = 'hookless-asymmetric'</code>, <code>cv27 = 4</code>: <code>t</code> without hook and ony half the cross bar.</li> <li><code>t = 'flat-hook-short-neck'</code>, <code>cv27 = 5</code>: <code>t</code> with flat hook and a slightly shorter neck.</li> <li><code>t = 'flat-hook-short-neck2'</code>, <code>cv27 = 6</code>: <code>t</code> with flat hook and a more shorter neck.</li> </ul> </li> <li>Styles for <code>u</code>:<ul> <li><code>u = 'toothed'</code>, <code>cv28 = 1</code>: Normal <code>u</code> with bottom-right tooth (default for Upright).</li> <li><code>u = 'toothless-corner'</code>, <code>cv28 = 2</code>: Toothless (corner bottom-right) <code>u</code>.</li> <li><code>u = 'toothless-rounded'</code>, <code>cv28 = 3</code>: Toothless (rounded) <code>u</code>, like a smaller uppercase <code>U</code>.</li> <li><code>u = 'tailed'</code>, <code>cv28 = 4</code>: <code>u</code> with right bar and a slightly curly tail (default for Italic).</li> <li><code>u = 'motion-serifed'</code>, <code>cv28 = 5</code>: Normal <code>u</code> with right bar and motion serifs.</li> <li><code>u = 'motion-serifed-tailed'</code>, <code>cv28 = 6</code>: <code>u</code> with right bar, motion serifs and a slightly curly tail.</li> </ul> </li> <li>Styles for <code>v</code>, <code>V</code>:<ul> <li><code>v = 'straight'</code>, <code>cv29 = 1</code>: Standard, straight <code>V</code>\u00a0and <code>v</code> (default).</li> <li><code>v = 'curly'</code>, <code>cv29 = 2</code>: \u00a0Slightly curly <code>V</code>\u00a0and <code>v</code>, like Iosevka 2.x.</li> </ul> </li> <li>Styles for <code>w</code>, <code>W</code>:<ul> <li><code>w = 'straight'</code>, <code>cv30 = 1</code>: Standard, straight <code>W</code>\u00a0and <code>w</code> (default).</li> <li><code>w = 'curly'</code>, <code>cv30 = 2</code>: Slightly curly <code>W</code>\u00a0and <code>w</code>, like Iosevka 2.x.</li> <li><code>w = 'straight-flat-top'</code>, <code>cv30 = 3</code>: Standard, straight <code>W</code>\u00a0and <code>w</code>, and the middle is forced to be aligned the top.</li> </ul> </li> <li>Styles for <code>x</code>, <code>X</code>:<ul> <li><code>x = 'straight'</code>, <code>cv31 = 1</code>: Standard, straight <code>X</code>\u00a0and <code>x</code> (default).</li> <li><code>x = 'curly'</code>, <code>cv31 = 2</code>: Slightly curly <code>X</code>\u00a0and <code>x</code>, like Iosevka 2.x.</li> </ul> </li> <li>Styles for <code>y</code>:<ul> <li><code>y = 'straight'</code>, <code>cv32 = 1</code>: Letter <code>y</code> that is fully straight (default for Sans Upright).</li> <li><code>y = 'straight-turn'</code>, <code>cv32 = 2</code>: Letter <code>y</code> with straight upper and a tail turns leftward (default for Slab Upright).</li> <li><code>y = 'curly'</code>, <code>cv32 = 3</code>: More curly letter <code>y</code>, like Iosevka 2.x.</li> <li><code>y = 'cursive'</code>, <code>cv32 = 4</code>: Cursive-like <code>y</code> (default for Italic).</li> </ul> </li> <li>Styles for <code>z</code>, <code>Z</code>:<ul> <li><code>z = 'standard'</code>, <code>cv33 = 1</code>: Standard <code>Z</code> and <code>z</code> (default).</li> <li><code>z = 'with-crossbar'</code>, <code>cv33 = 2</code>: Standard <code>Z</code> and <code>z</code> with a diagonal cross bar for better dsitinction with <code>2</code>.</li> <li><code>z = 'with-horizontal-crossbar'</code>, <code>cv33 = 3</code>: Standard <code>Z</code> and <code>z</code> with a horizontal cross bar for better dsitinction with <code>2</code>.</li> <li><code>z = 'curly'</code>, <code>cv33 = 4</code>: Curly <code>Z</code> and <code>z</code>.</li> <li><code>z = 'curly-with-crossbar'</code>, <code>cv33 = 5</code>: Curly <code>Z</code> and <code>z</code> with a diagonal cross bar for better dsitinction with <code>2</code>.</li> <li><code>z = 'curly-with-horizontal-crossbar'</code>, <code>cv33 = 6</code>: Curly <code>Z</code> and <code>z</code> with a horizontal cross bar for better dsitinction with <code>2</code>.</li> </ul> </li> <li>Styles for <code>\u00df</code>:<ul> <li><code>eszet = 'traditional'</code>, <code>cv34 = 1</code>: Traditional, Fraktur-like Eszet.</li> <li><code>eszet = 'sulzbacher'</code>, <code>cv34 = 2</code>: A more modern, beta-like Eszet (default).</li> <li><code>eszet = 'longs-s-lig'</code>, <code>cv34 = 3</code>: An Eszet shown as a ligature of long-S (<code>\u017f</code>) and <code>s</code>.</li> </ul> </li> <li>Styles for <code>\u03bb</code>:<ul> <li><code>lambda = 'straight'</code>, <code>cv35 = 1</code>: More-straight letter <code>\u03bb</code> (default).</li> <li><code>lambda = 'curly'</code>, <code>cv35 = 2</code>: More curly letter <code>\u03bb</code>, like Iosevka 2.x.</li> </ul> </li> <li>Styles for <code>0</code>:<ul> <li><code>zero = 'slashed'</code>, <code>cv36 = 1</code>: Slashed Zero <code>0</code> (default).</li> <li><code>zero = 'dotted'</code>, <code>cv36 = 2</code>: Dotted Zero <code>0</code>.</li> <li><code>zero = 'unslashed'</code>, <code>cv36 = 3</code>: O-like <code>0</code>.</li> <li><code>zero = 'reverse-slashed'</code>, <code>cv36 = 4</code>: Reverse-slashed <code>0</code>.</li> <li><code>zero = 'long-dotted'</code>, <code>cv36 = 5</code>: Long-dotted Zero <code>0</code> like Hack.</li> </ul> </li> <li>Styles for <code>1</code>:<ul> <li><code>one = 'nobase'</code>, <code>cv37 = 1</code>: <code>1</code> without bottom serif (default for Sans).</li> <li><code>one = 'base'</code>, <code>cv37 = 2</code>: <code>1</code> with bottom serif (default for Slab).</li> <li><code>one = 'line'</code>, <code>cv37 = 3</code>: <code>1</code> drawn just like a straight line.</li> </ul> </li> <li>Styles for <code>3</code>:<ul> <li><code>three = 'flattop'</code>, <code>cv38 = 1</code>: Flat top <code>3</code> (Like Museo Sans / Montserrat).</li> <li><code>three = 'twoarcs'</code>, <code>cv38 = 2</code>: Arched top <code>3</code> (default).</li> </ul> </li> <li>Styles for <code>4</code>:<ul> <li><code>four = 'closed'</code>, <code>cv39 = 1</code>: <code>4</code> with closed contour (default).</li> <li><code>four = 'closed-non-crossing'</code>, <code>cv39 = 2</code>: <code>4</code> with closed contour but the horizontal bar does not overflow the vertical bar.</li> <li><code>four = 'semi-open'</code>, <code>cv39 = 3</code>: <code>4</code> with semi-open contour.</li> <li><code>four = 'semi-open-non-crossing'</code>, <code>cv39 = 4</code>: <code>4</code> with semi-open contour but the horizontal bar does not overflow the vertical bar.</li> <li><code>four = 'open'</code>, <code>cv39 = 5</code>: <code>4</code> with open contour.</li> <li><code>four = 'open-non-crossing'</code>, <code>cv39 = 6</code>: <code>4</code> with open contour but the horizontal bar does not overflow the vertical bar.</li> </ul> </li> <li>Styles for <code>6</code>:<ul> <li><code>six = 'closed-contour'</code>, <code>cv40 = 1</code>: <code>6</code> with a more closed contour.</li> <li><code>six = 'open-contour'</code>, <code>cv40 = 2</code>: <code>6</code> with a more open contour.</li> <li><code>six = 'straight-bar'</code>, <code>cv40 = 3</code>: <code>6</code> with a straight bar (default).</li> </ul> </li> <li>Styles for <code>7</code>:<ul> <li><code>seven = 'noserif'</code>, <code>cv41 = 1</code>: <code>7</code> without serif (default for Sans).</li> <li><code>seven = 'serifed'</code>, <code>cv41 = 2</code>: <code>7</code> with initial serif (default for Slab).</li> <li><code>seven = 'crossbar'</code>, <code>cv41 = 3</code>: <code>7</code> with crossbar.</li> <li><code>seven = 'crossbar-serifed'</code>, <code>cv41 = 4</code>: <code>7</code> with crossbar and initial serif.</li> </ul> </li> <li>Styles for <code>9</code>:<ul> <li><code>nine = 'closed-contour'</code>, <code>cv42 = 1</code>: <code>9</code> with a more closed contour.</li> <li><code>nine = 'open-contour'</code>, <code>cv42 = 2</code>: <code>9</code> with a more open contour.</li> <li><code>nine = 'straight-bar'</code>, <code>cv42 = 3</code>: <code>9</code> with a straight bar (default).</li> </ul> </li> <li>Styles for <code>~</code>:<ul> <li><code>tilde = 'high'</code>, <code>cv43 = 1</code>: Higher tilde <code>~</code>.</li> <li><code>tilde = 'low'</code>, <code>cv43 = 2</code>: Lower tilde <code>~</code> (default).</li> </ul> </li> <li>Styles for <code>*</code>:<ul> <li><code>asterisk = 'high'</code>, <code>cv44 = 1</code>: Higher five-pointed asterisk <code>*</code> (default).</li> <li><code>asterisk = 'low'</code>, <code>cv44 = 2</code>: Lower five-pointed asterisk <code>*</code>.</li> <li><code>asterisk = 'hexhigh'</code>, <code>cv44 = 3</code>: Higher six-pointed asterisk <code>*</code>.</li> <li><code>asterisk = 'hexlow'</code>, <code>cv44 = 4</code>: Lower six-pointed asterisk <code>*</code>.</li> <li><code>asterisk = 'flip-penta-high'</code>, <code>cv44 = 5</code>: Higher five-pointed and turned asterisk <code>*</code>.</li> <li><code>asterisk = 'flip-penta-low'</code>, <code>cv44 = 6</code>: Lower five-pointed and turned asterisk <code>*</code>.</li> </ul> </li> <li>Styles for <code>_</code>:<ul> <li><code>underscore = 'high'</code>, <code>cv45 = 1</code>: Higher underscore <code>_</code>, placed right below baseline (default).</li> <li><code>underscore = 'low'</code>, <code>cv45 = 2</code>: Lower underscore <code>_</code>, placed right above descender line.</li> <li><code>underscore = 'above-baseline'</code>, <code>cv45 = 3</code>: Extra-high <code>_</code>, placed right below baseline.</li> </ul> </li> <li>Styles for <code>\u00b6</code>:<ul> <li><code>paragraph-sign = 'high'</code>, <code>cv46 = 1</code>: Higher paragraph sign <code>\u00b6</code> (default).</li> <li><code>paragraph-sign = 'low'</code>, <code>cv46 = 2</code>: Lower paragraph sign <code>\u00b6</code>.</li> </ul> </li> <li>Styles for <code>^</code>:<ul> <li><code>caret = 'high'</code>, <code>cv47 = 1</code>: Higher circumflex <code>^</code> (default).</li> <li><code>caret = 'low'</code>, <code>cv47 = 2</code>: Lower circumflex <code>^</code>.</li> </ul> </li> <li>Styles for <code>(</code>, <code>)</code>:<ul> <li><code>paren = 'normal'</code>, <code>cv48 = 1</code>: Parenthesis with normal contour (default).</li> <li><code>paren = 'large-contour'</code>, <code>cv48 = 2</code>: Parenthesis with larger contour, like that in Monaco.</li> </ul> </li> <li>Styles for <code>{</code>, <code>}</code>:<ul> <li><code>brace = 'straight'</code>, <code>cv49 = 1</code>: More straight braces.</li> <li><code>brace = 'curly'</code>, <code>cv49 = 2</code>: More curly braces (default).</li> </ul> </li> <li>Styles for <code>#</code>:<ul> <li><code>number-sign = 'upright'</code>, <code>cv50 = 1</code>: Number sign with vertical bars (default).</li> <li><code>number-sign = 'slanted'</code>, <code>cv50 = 2</code>: Number sign with slanted bars.</li> <li><code>number-sign = 'upright-open'</code>, <code>cv50 = 3</code>: Number sign with vertical bars and open inner.</li> <li><code>number-sign = 'slanted-open'</code>, <code>cv50 = 4</code>: Number sign with slanted bars and open inner.</li> </ul> </li> <li>Styles for <code>&amp;</code>:<ul> <li><code>ampersand = 'closed'</code>, <code>cv51 = 1</code>: Ampersand (<code>&amp;</code>) with a closed contour (default).</li> <li><code>ampersand = 'upper-open'</code>, <code>cv51 = 2</code>: Ampersand (<code>&amp;</code>) with an open contour at upper half.</li> <li><code>ampersand = 'lower-open'</code>, <code>cv51 = 3</code>: Ampersand (<code>&amp;</code>) with an open contour at lower half.</li> <li><code>ampersand = 'et-toothed'</code>, <code>cv51 = 4</code>: Ampersand (<code>&amp;</code>) drawn like a ligature of \u0190 and t with tooth.</li> <li><code>ampersand = 'et-toothless-corner'</code>, <code>cv51 = 5</code>: Ampersand (<code>&amp;</code>) drawn like a ligature of \u0190 and t without tooth (corner).</li> <li><code>ampersand = 'et-toothless-rounded'</code>, <code>cv51 = 6</code>: Ampersand (<code>&amp;</code>) drawn like a ligature of \u0190 and t without tooth (rounded).</li> <li><code>ampersand = 'flat-top'</code>, <code>cv51 = 7</code>: Ampersand (<code>&amp;</code>) drawn with a flat top.</li> </ul> </li> <li>Styles for <code>@</code>:<ul> <li><code>at = 'threefold'</code>, <code>cv52 = 1</code>: The long, three-fold At symbol (<code>@</code>) (default).</li> <li><code>at = 'fourfold'</code>, <code>cv52 = 2</code>: The traditional, four-fold At symbol (<code>@</code>).</li> <li><code>at = 'short'</code>, <code>cv52 = 3</code>: The shorter, Fira-like At symbol (<code>@</code>).</li> </ul> </li> <li>Styles for <code>$</code>:<ul> <li><code>dollar = 'open'</code>, <code>cv53 = 1</code>: Dollar symbol with open contour.</li> <li><code>dollar = 'through'</code>, <code>cv53 = 2</code>: Dollar symbol with strike-through vertical bar (default).</li> <li><code>dollar = 'opencap'</code>, <code>cv53 = 3</code>: Dollar symbol with open contour, not exceeding baseline and ascender.</li> <li><code>dollar = 'throughcap'</code>, <code>cv53 = 4</code>: Dollar symbol with strike-through vertical bar, not exceeding baseline and ascender.</li> </ul> </li> <li>Styles for <code>%</code>:<ul> <li><code>percent = 'dots'</code>, <code>cv54 = 1</code>: Percent <code>%</code>, Per-mille <code>\u2030</code> and basis point <code>\u2031</code> using rectangular dots.</li> <li><code>percent = 'rings'</code>, <code>cv54 = 2</code>: Percent <code>%</code> with rings and broken bar; Per-mille <code>\u2030</code> and basis point <code>\u2031</code> with rings (default).</li> <li><code>percent = 'rings-connected'</code>, <code>cv54 = 3</code>: Percent <code>%</code>, Per-mille <code>\u2030</code> and basis point <code>\u2031</code> using rings and continuous bar.</li> </ul> </li> <li>Styles for <code>|</code>:<ul> <li><code>bar = 'natural-slope'</code>, <code>cv55 = 1</code>: Bar punctuations (<code>|</code>) has a natural slope under italics and oblique (default).</li> <li><code>bar = 'force-upright'</code>, <code>cv55 = 2</code>: Bar punctuations (<code>|</code>) is forced upright under italics and oblique.</li> </ul> </li> <li>Styles for <code>&lt;=</code>, <code>&gt;=</code>:<ul> <li><code>lig-ltgteq = 'flat'</code>, <code>cv56 = 1</code>: The lower bar of <code>&lt;=</code> and <code>&gt;=</code> ligation is flat (default).</li> <li><code>lig-ltgteq = 'slanted'</code>, <code>cv56 = 2</code>: The lower bar of <code>&lt;=</code> and <code>&gt;=</code> ligation is slanted.</li> </ul> </li> <li>Styles for <code>'</code>:<ul> <li><code>ascii-single-quote = 'straight'</code>, <code>cv57 = 1</code>: Show ASCII quote (<code>'</code>) as short vertical straight bar. (default).</li> <li><code>ascii-single-quote = 'raised-comma'</code>, <code>cv57 = 2</code>: Show ASCII quote (<code>'</code>) as raised comma..</li> </ul> </li> <li>Styles for <code>`</code>:<ul> <li><code>ascii-grave = 'straight'</code>, <code>cv58 = 1</code>: Show ASCII grave (<code>`</code>) as short diagonal straight bar. (default).</li> <li><code>ascii-grave = 'raised-inverse-comma'</code>, <code>cv58 = 2</code>: Show ASCII grave (<code>`</code>) as raised comma..</li> </ul> </li> </ul>"},{"location":"fonts/iosevka/#configuring-weights-widths-and-slopes","title":"Configuring Weights, Widths and Slopes","text":"<p>Subsection <code>weights</code> is used to change the weight grades that the custom family needs. It is a dictionary of sub-objects with properties:</p> <ul> <li><code>shape</code>: Integer, configures the weight grade of the glyphs' shapes.</li> <li><code>menu</code>: Integer, configures the weight grade used when naming fonts.</li> <li><code>css</code>: Integer, configures the weight grade used in web font CSS.</li> </ul> <p>Subsection <code>widths</code> is used to change the weight grades that the custom family needs. It is a dictionary of sub-objects with properties:</p> <ul> <li><code>shape</code>: Integer, configures the width of the glyphs' shapes, measured in 1/1000 em.</li> <li><code>menu</code>: Integer, configures the width grade used when naming fonts. The valid values are <code>1</code> to <code>9</code>, inclusive.</li> <li><code>css</code>: String, configures the font-stretch value used in web font CSS.</li> </ul> <p>Subsection <code>slopes</code> is a simple string-to-string dictionary maps slopes (<code>upright</code>, <code>italic</code> or <code>oblique</code>) to CSS font-style values, represented in string.</p>"},{"location":"fonts/iosevka/#compatibility-ligatures","title":"Compatibility Ligatures","text":"<p>Certain software, notably Emacs, relies on pre-encoded ligatures instead of OpenType to provide ligations. Iosevka could be configured with additional subsection <code>compatibility-ligatures</code>, being an array of records with following fields:</p> <ul> <li><code>unicode</code>: The PUA code point being assigned to.</li> <li><code>featureTag</code>: The feature tag to compute ligations.</li> <li><code>sequence</code>: The source character sequence.</li> </ul> <p>A sample of compatibility ligature config is:</p> <pre><code>[[buildPlans.iosevka-custom.compatibility-ligatures]]\nunicode = 57600 # 0xE100\nfeatureTag = 'calt'\nsequence = '&lt;*&gt;'\n</code></pre>"},{"location":"fonts/iosevka/#sample-configuration","title":"Sample Configuration","text":"<p>A sample configuration could be found at private-build-plans.sample.toml.</p>"},{"location":"fonts/iosevka/#for-chinese-and-japanese-users","title":"For Chinese and Japanese users...","text":"<p>\u2192 Sarasa Gothic.</p> <p></p>"},{"location":"fonts/iosevka/CHANGELOG/","title":"CHANGELOG","text":""},{"location":"fonts/iosevka/CHANGELOG/#modifications-since-version-2x","title":"Modifications since version 2.x","text":""},{"location":"fonts/iosevka/CHANGELOG/#400","title":"4.0.0","text":"<ul> <li>[Breaking] Change implementation of character variants to <code>cv##</code> and alternate substitutions (#572).</li> <li>[Breaking] Change the building configuration format -- now we use dicts instead of \u201carray of styles\u201d.</li> <li>[Breaking] Cleanup of weight levels and increase contrast under heavier weights.</li> <li>[Breaking] Remove WOFF 1 web font building.</li> <li>[Breaking] Release packages will now be divided by formats.</li> <li>Add Characters:</li> <li>Derived bold, italic, sans-serif, typewriter, and double-struck letters / digits, in Mathematical Alphanumeric Symbols block (#444, #712).</li> <li>Half-filled stars (<code>U+2BE8</code> ... <code>U+2BEB</code>, #708).</li> <li><code>U+0462</code> CYRILLIC CAPITAL LETTER YAT and <code>U+0463</code> CYRILLIC SMALL LETTER YAT (#727).</li> <li><code>U+1D6A4</code> MATHEMATICAL ITALIC SMALL DOTLESS I, <code>U+1D6A5</code> MATHEMATICAL ITALIC SMALL DOTLESS J (#730).</li> <li>U+23CF EJECT SYMBOL (#728).</li> <li>Add Variants:</li> <li><code>u</code>/<code>toothless-corner</code> (#706).</li> <li>Curly variants of <code>Z</code> / <code>z</code> (#362).</li> <li>Toothless-corner variant of <code>G</code> and Ampersand (<code>&amp;</code>).</li> <li>Update <code>ss09</code> style for capital G to Toothless (#726).</li> <li>Add ligation set for Verilog (#710).</li> <li>Add more alternative exclamation-related ligation sets (<code>exeqeq-dotted</code>, <code>eqexeq-dotted</code>, <code>eqexeq-dl-dotted</code>) (#748).</li> <li>Fix the shape of hook-top V's.</li> <li>Make check and cross marks wide-aware.</li> <li>Fix middle bar placement of <code>U+2180</code> under quasi-proportional.</li> <li>Correct description of <code>1</code> variants (#711).</li> <li>Fix broken Bulgarian localization of Cyrillic Small Sha and Cyrillic Capital El (#716).</li> <li>Fix broken serif shapes in Italic Cyrillic Small I (#717).</li> <li>Fix incorrect serifs of Greek Small Rho (#718).</li> <li>Fix inconsistent italic serif of <code>U+0463</code> CYRILLIC SMALL LETTER YAT (#729).</li> <li>Fix inconsistent serif on Bulgarian <code>U+044E</code> CYRILLIC SMALL LETTER YU (#732).</li> <li>Fix variant application on italic Cyrillic Small Te and Cyrillic Small I (#734).</li> <li>Fix variant application on fraction 1/10 (<code>U+2152</code>, #736).</li> <li>Fix variant application on LATIN SMALL LETTER WITH STROKE (<code>U+0167</code>, #737).</li> <li>Fix centering of <code>Q</code> variants when occurred in enclosures (#751).</li> <li>Fix broken descender connection of <code>cyrl/tse</code> (U+0446) under Italic (#754).</li> <li>Fix missing serifs in earless-corner <code>m</code> variants (#752).</li> <li>Remove slight curvature of italic single-storey <code>a</code> (#755).</li> <li>Fix kerned dotty operators' placement when placed near brackets and commas (#757).</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#371","title":"3.7.1","text":"<ul> <li>Fix broken line height under Macintosh (#704).</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#370","title":"3.7.0","text":"<ul> <li>Make <code>v-k-cursive</code> visible in Upright and Oblique; Split variant selectors for <code>k</code> and <code>K</code> (#700).</li> <li>Add flat hooked but tailed variants for <code>f</code> (<code>VXEX</code> ... <code>VXFA</code>) (#697).</li> <li>Fix mark position of Small Heng With Hook (<code>U+0267</code>) and Small Heng (<code>U+A727</code>); add letter Cyrillic Iotified Small and Big Yus (<code>U+0468</code>, <code>U+0469</code>, <code>U+046C</code>, <code>U+046D</code>), Capital Heng (<code>U+A726</code>), and Cyrillic En With Hook (<code>U+04C7</code>, <code>U+04C8</code>).</li> <li>Corrected shape of descender-accented Cyrillic letters under Slab; Add letter Khakassian Che (<code>U+04CB</code>, <code>U+04CC</code>) and Ghe With Descender (<code>U+04F6</code>, <code>U+04F7</code>).</li> <li>Add more asterisk and star dingbats (<code>U+2733</code>, <code>U+2734</code>, <code>U+2737</code> ... <code>U+273A</code>).</li> <li>Add more sized geometric shapes (<code>U+26AA</code>, <code>U+26AB</code>, <code>U+2B1A</code> ... <code>U+2B1E</code>, <code>U+2B25</code> ... <code>U+2B2B</code>, <code>U+2BC0</code> ... <code>U+2BC8</code>, <code>U+2BCA</code>, <code>U+2BCB</code>).</li> <li>Fix variant selection for <code>\u0273</code> (<code>U+0273</code>), <code>\u0256</code> (<code>U+0256</code>), and <code>\u1d91</code> (<code>U+1D91</code>).</li> <li>Fix shape of capital <code>J</code> under Aile.</li> <li>Fix <code>lSlash</code>'s shape under Aile.</li> <li>Add graphic form of CGJ(<code>U+034F</code>), ZWNJ (<code>U+200C</code>), ZWJ (<code>U+200D</code>), Object Replacement Character (<code>U+FFFC</code>), and Replacement Character (<code>U+FFFD</code>, #698).</li> <li>Add semicircle arrows (<code>U+21B6</code>, <code>U+21B7</code>) and open-circle arrows (<code>U+21BA</code>, <code>U+21BB</code>).</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#363","title":"3.6.3","text":"<ul> <li>Add Gear symbol (<code>U+2699</code>).</li> <li>Make motion-serif variants work for Cyrillic letters having same outline like Latin <code>u</code> (#692).</li> <li>Fix the italic shape of Cyrillic GE (<code>U+0491</code>).</li> <li>Add Egyptological Alef (<code>U+A722</code>, <code>U+A723</code>), Ayin (<code>U+A724</code>, <code>U+A725</code>) and Glottal <code>a</code>, <code>i</code> and <code>u</code> (<code>U+A7BA</code> ... <code>U+A7BF</code>) (#695).</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#362","title":"3.6.2","text":"<ul> <li>Add compile option to default to old-style figures (#397).</li> <li>Add control picture symbols (<code>U+2400</code> ... <code>U+2422</code>, <code>U+2424</code>).</li> <li>Add Claudian letters (<code>U+2132</code>, <code>U+214E</code>, <code>U+2183</code>, <code>U+2184</code>, <code>U+2C75</code>, <code>U+2C76</code>).</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#361","title":"3.6.1","text":"<ul> <li>Add dice symbols (<code>U+2680</code> ... <code>U+2685</code>).</li> <li>Add medium and extra-small squares (<code>U+25FB</code> ... <code>U+25FE</code>), white squares and circles with quadrants (<code>U+25F0</code> ... <code>U+25F7</code>) and white diagonal half triangles (<code>U+25F8</code> ... <code>U+25FA</code>, <code>U+25FF</code>).</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#360","title":"3.6.0","text":"<ul> <li>Add <code>v-f-flat-hook-serifed</code> and <code>v-f-flat-hook-serifed-crossbar-at-x-height</code> for <code>f</code> (#686).</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#350","title":"3.5.0","text":"<ul> <li>Increase size of bullet characters (#678).</li> <li>Move registered trademark symbol (U+00A9, \u00ae) to superscript (#679).</li> <li>Balance old-style figures to reduce raggedness (#402).</li> <li>Add ligation set for Wolfram Language (#680).</li> <li>Add \"Motion-serifed\" variants for <code>h</code>, <code>m</code>, <code>n</code>, <code>p</code> and <code>u</code> (#684).</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#347","title":"3.4.7","text":"<ul> <li>Fix broken slab-serif variants of <code>m</code> and <code>n</code> in italics (#681).</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#346","title":"3.4.6","text":"<ul> <li>Fix unbalanced shape of <code>v</code>-related shapes.</li> <li>Fix below marks of <code>Q</code>.</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#345","title":"3.4.5","text":"<ul> <li>Fix shape of <code>\u027b</code> under Aile variant.</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#344","title":"3.4.4","text":"<ul> <li>Add toothless variant for <code>a</code> (#669).</li> <li>Add earless variants for <code>m</code>, <code>n</code>, <code>r</code> (#669).</li> <li>Add asymmetric hookless and short-neck flat-hook variant of <code>t</code> (#669, #672).</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#343","title":"3.4.3","text":"<ul> <li>Fix conflicting CV tag of <code>VXDA</code>. Variant for <code>l</code> is renamed to <code>VXDL</code> (#668).</li> <li>Fix compat-ligature building (#667).</li> <li>Massively reduce the glyph quantity needed to support glyph variants.</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#342","title":"3.4.2","text":"<ul> <li>Add curly variant for ASCII single quote (<code>'</code>) and ASCII grave (<code>`</code>) (#660).</li> <li>Fix broken marks of U+1AB2, U+0356 and U+035A.</li> <li>Fix bar placement of italic <code>\u045f</code>.</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#341","title":"3.4.1","text":"<ul> <li>Fix broken shape of heavy <code>v</code>.</li> <li>Fix weight balancing (#656).</li> <li>Fix image clipping in README (#657).</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#340","title":"3.4.0","text":"<ul> <li>Add tailed two-story <code>a</code> (#637).</li> <li>Add turned five-pointing asterisk <code>*</code> (#638).</li> <li>Add horizontal crossbar variant of <code>Z</code> and <code>z</code> (#640, #595).</li> <li>Add serifless <code>J</code> (#640).</li> <li>Add crossing <code>Q</code> (#640).</li> <li>Add tailed variant for <code>m</code>, <code>n</code> and <code>h</code>.</li> <li>Add flat-top <code>W</code>, <code>w</code> and flat-bottom <code>M</code> (#640).</li> <li>Add continuous-bar-rings percent sign <code>%</code> (#643).</li> <li>Fix combining letters' overlapping (#646).</li> <li>Add earless variants for <code>a</code>, <code>g</code>, <code>p</code> and <code>q</code> (#648).</li> <li>Add force-upright bar symbols (#652).</li> <li>Add <code>v-l-serifed-asymmetric</code> for <code>l</code> (#522).</li> <li>Add two \"symmetric\" variants of <code>J</code> (#654).</li> <li>Add flat-hook <code>f</code>, <code>j</code> and <code>t</code> (#581).</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#331","title":"3.3.1","text":"<ul> <li>Add a slightly-curly tailed <code>a</code> and <code>u</code> (#631, #636).</li> <li>Add triangle operators, bowtie operators and diagonal ellipsis.</li> <li>Refine the crossbar width of <code>7</code> in <code>v-seven-crossbar</code> variant (#634).</li> <li>Fix the broken shape of U-horns.</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#330","title":"3.3.0","text":"<ul> <li>Change shape of Peseta sign to <code>P</code> with crossbar (#451).</li> <li>Add Cyrillic Fita (#617).</li> <li>Add a more rounded variant of <code>D</code> (#616).</li> <li>Add support for open number sign (<code>VXBI</code> and <code>VXBJ</code>, #621).</li> <li>Add toothless variant of <code>b</code> and <code>d</code> (#462).</li> <li>Fix italic Cyrillic I and Tse shape when <code>v-u-without-bar</code> is applied (#625).</li> <li>Add <code>v-k-curly-cursive</code> combination (#627).</li> <li>Add <code>calt-exeq-dotted</code> as an alternative style of <code>!=</code> ligation (#608).</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#322","title":"3.2.2","text":"<ul> <li>Fix broken ligation of kerning colons and dot-related symbols.</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#321","title":"3.2.1","text":"<ul> <li>Fix placement of comma-shaped caron in l-caron and t-caron (#613).</li> <li>Fix placement of crossbar of <code>7</code> under onum and <code>VXAX</code>/<code>VXAY</code> (#615).</li> <li>Fix placement of overflowing bar of R-bar (#614).</li> <li>Fix shape of Reversed-E (#618).</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#320","title":"3.2.0","text":"<ul> <li>Add variants for six (<code>6</code>) : <code>v-six-closed-contour</code> (<code>VXAE</code>) and <code>v-six-open-contour</code> (<code>VXAF</code>). <code>v-nine-turned-six</code> is renamed to <code>v-nine-open-contour</code> (#562).</li> <li>Make variant selectors able to influence <code>l-dot</code> (U+0140, #566).</li> <li>Add variants for Ampersand (#211).</li> <li>Fix small gaps of l-belt and l-rtail-belt (#569).</li> <li>Fix R-bar's bar position (#574).</li> <li>Add U+228C, U+228E, U+2214, U+221B, U+221C (#567).</li> <li>Add straight-line variant for <code>1</code> (#573).</li> <li>Cover all the characters in CP437 (#577).</li> <li>Add parenthesis variant with larger contour (#570).</li> <li>Fix placement of U+0315 COMBINING COMMA ABOVE RIGHT (#583).</li> <li>Fix shape of U+1D24 LATIN LETTER VOICED LARYNGEAL SPIRANT (#584).</li> <li>Allow the user to customize the characters' width freely (#554).</li> <li>Fix placement of descenders in U+04AC/U+04AD CYRILLIC CAPITAL/SMALL LETTER TE WITH DESCENDER (#585).</li> <li>Fix shape of U+01A6 LATIN LETTER YR under curly variant (#586).</li> <li>Fix serif placement of U+044E CYRILLIC SMALL LETTER YU under Bulgarian locale (#587).</li> <li>Make combining lines connect left and right (#590).</li> <li>Make the curly-slab shape of <code>R</code>, <code>v</code>, <code>x</code> and <code>y</code> more distinctive (#591, #609).</li> <li>Add U+02BE MODIFIER LETTER RIGHT HALF RING and U+02BF MODIFIER LETTER LEFT HALF RING (#588).</li> <li>Add variant <code>v-capital-b-more-asymmetric</code> (<code>VXAQ</code>) for <code>B</code> for better differentiation with <code>8</code> (#589).</li> <li>Fix inconsistent stroke widths in heavy delta-like components (#593).</li> <li>Made the ties move further away from above marks, and implement diacritics above ties (#596).</li> <li>Add variants for <code>4</code>, <code>7</code>, <code>6</code>, <code>9</code>, <code>q</code> and <code>z</code> (#595).</li> <li>Fix missing slab on <code>v-u-without-bar</code> (#601).</li> <li>Change shape of U+0192 for better differentiation (#611).</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#311","title":"3.1.1","text":"<ul> <li>Fix localized form of U+045D (#560).</li> <li>Fix broken shape of R under CV83 (#561).</li> <li>Fix broken shape of U+235d (#563).</li> <li>Fix broken shape of U+0494, U+0495 (#564).</li> <li>Fix missing serif of U+1DB2 (#565).</li> <li>Fix incorrect serifs of Sho (U+03F8, #568).</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#310","title":"3.1.0","text":"<ul> <li>Add Pitman duodecimal digits (#483).</li> <li>Add proper support for IPA tone letters (#508).</li> <li>Moved low caret upward a little to make it more legible (#526).</li> <li>Add support for WHITE SUN WITH RAYS (U+263C, \u263c, #521).</li> <li>Add preview image building in release notes.</li> <li>Added <code>v-underscore-above-baseline</code> (<code>cv99</code>) and redefined the <code>v-underscore-high</code> to the right-below-baseline variant (#515).</li> <li>Match styles of <code>1</code> and <code>7</code> in <code>ss##</code> variants (#539).</li> <li>Refine the width of <code>A</code> and <code>V</code>.</li> <li>Changed the layout of character variants sample image for better clarity.</li> <li>Fix <code>head.fontRevision</code> computation (#545).</li> <li>Add Cyrillic Ghe-with-hook and En-Ghe (#540).</li> <li>Fix typo of <code>v-l-zshaped</code>'s description (#547).</li> <li>Add long-dotted zero (#437).</li> <li>Fix broken long ligature at beginning of line in macOS TextEdit (#548).</li> <li>Add <code>v-eszet-longs-s-lig</code> (#455).</li> <li>Make <code>cv##</code> and <code>ss##</code> features work on enclosed/braced/superscript/subscript letters (#516).</li> <li>Add playback symbols.</li> <li>Add <code>f</code> with straight tail (<code>v-f-straight-tailed</code>, <code>VXAD</code>, #519).</li> <li>Fix the position of the bar in U+1E9D LATIN SMALL LETTER LONG S (#558).</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#301","title":"3.0.1","text":"<ul> <li>Fixed incorrect influence of Latin character variant features on Bulgarian Cyrillic (#532).</li> <li>Added TTC-only packages back.</li> </ul>"},{"location":"fonts/iosevka/CHANGELOG/#300","title":"3.0.0","text":"<ul> <li>Fix missing mapping regression of U+1D0D (#510).</li> <li>Fix dot removal on various derived glyphs (#513).</li> <li>Fix styling features for Bulgarian, Macedonian, or Serbian (#514).</li> <li>Fix seam on certain Cyrillic letters with descender shape (#517).</li> <li>Fix compatibility ligature building (#524). Also moved metric override configuration, compatibility ligature configuration and character removal configuration into build plans.</li> <li>Prerelease changes</li> <li>3.0.0-rc.8<ul> <li>Fix shape of combining small capitals (U+1DDB, U+1DDE, U+1DDF, U+1DE1, and U+1DE2; #500).</li> <li>Fix shape of H-cedilla (U+1E28 and U+1E29; #499).</li> <li>Fix incorrect mapping of U+228D (was U+228E) (#501).</li> <li>Fix shape of U+0478 and U+0479 (#503).</li> <li>Fix broken shape of R-stroke (#504).</li> <li>Fix shape of U+21B9 (#505).</li> <li>Change feature name <code>fwid</code> \u2192 <code>WWID</code>, <code>hwid</code> \u2192 <code>NWID</code>.</li> <li>Fix Iosevka Curly's default mapping of <code>@</code> (#509).      </li> </ul> </li> <li>3.0.0-rc.7<ul> <li>Fixed phonetic ligatures' shape. Now they are connected more closely (#488).</li> <li>Fix shape of U+AB30, U+AB64 and U+1DE7 (#489).</li> <li>Fix export of U+478 and U+479.</li> <li>Fix shape of U+029A, U+1D08, U+1D4C (#491).</li> <li>Add U+AB66 and U+AB67 (#488).</li> <li>Fix shape of U+1DF0 (#497).      </li> </ul> </li> <li>3.0.0-rc.6<ul> <li>Add IEC power symbol.</li> <li>Add straight lambda (<code>\u03bb</code>) shape, and corresponded variant selector <code>cv94</code>. Old shape is placed under <code>cv95</code> (#467).</li> <li>Add U+2423 <code>OPEN BOX</code> (<code>\u2423</code>) (#469).</li> <li>Add Bashkir Ka (U+04A0, U+04A1) (#441).</li> <li>Fixed mapping for U+028C, U+034D.</li> <li>Fixed the thickness of thick arrows under full width.</li> <li>Fixed missing <code>TM</code> and <code>SM</code> symbol.</li> <li>Fixed weight of dotted numbers.</li> <li>Fix APL symbols' metric under Aile.</li> <li>Make <code>m.shortleg</code> more distinctive (#471).</li> <li>Add ligation for waved double-headed-arrow (#475).</li> <li>Expand the ligation set for colons to all dotty operators (#476).</li> <li>Added variants for <code>9</code> like a turned <code>6</code> (#363).      </li> </ul> </li> <li>3.0.0-rc.5<ul> <li>Add reverse-slashed zero (#438).</li> <li>Add U+1F8B0 and U+1F8B1 (#459).</li> <li>Fixed broken shape around <code>srtail</code>, <code>Sswash</code> and <code>sswash</code>.</li> <li>Fix <code>no-cv-ss</code> building (#460).</li> <li>Retrocomputing symbols are now defaults to half-width.</li> <li>Made variant selectors work for turned letters.</li> <li>Make <code>ligset-dlig</code> usable from custom build (#463).      </li> </ul> </li> <li>3.0.0-rc.4<ul> <li>Fix OTL script tag of default script (<code>dflt</code> -&gt; <code>DFLT</code>). Though most shaping engine would not be impacted by the incorrect tag in earlier versions.</li> <li>Add large brackets (U+239B ... U+23AD) and extensible integral symbols (U+2320, U+2321, U+23AE).</li> <li>Add arrow U+21DE, U+21DF, U+2908, U+2909.</li> <li>Add logical symbol U+22A9, U+22AA, U+22AB, U+22AE, U+22AF.</li> <li>Cancelled ligation around regex look-around.</li> <li>Implement thousand-digit grouping under <code>THND</code> feature.</li> <li>Shape refinements of digit <code>1</code> and <code>6</code>.      </li> </ul> </li> <li>3.0.0-rc.3<ul> <li>Fix shape of <code>smcpGhooktop</code> (U+029B) and <code>uogonek.withoutBar</code>.</li> <li>Make the dotless <code>i</code> and <code>j</code> CCMP feature work for more related characters and stylized forms.</li> <li>Fix substitution of i-ogonek and upper combining marks.</li> <li>Fix broken shape of tildes.</li> <li>Fix broken degree-C and degree-F ligature.</li> <li>Fix broken cup (<code>\u222a</code>) and cap (<code>\u2229</code>) symbol.      </li> </ul> </li> <li>3.0.0-rc.2<ul> <li>Change the glyph shape for U+1E10 \u201c\u1e10\u201d and U+1E11 \u201c\u1e11\u201d to D-comma rather than D-cedilla.</li> <li>Add toothless <code>G</code>.</li> <li>Rename private feature tags to follow OTSpec\u2019s vendor-specific tag guide.      </li> </ul> </li> <li>3.0.0-rc.1<ul> <li>The packaging and spacing is significantly changed:<ul> <li><code>Iosevka</code> \u2192 Kept, but made arrows and geometric symbols wide.</li> <li><code>Iosevka Term</code> \u2192 <code>Iosevka Fixed</code>.</li> <li><code>Iosevka TermLig</code> \u2192 <code>Iosevka Term</code>.</li> <li><code>Iosevka Type</code> \u2192 Removed.</li> <li><code>Iosevka CC</code> \u2192 Removed.</li> </ul> </li> <li>Fix \u201cLucida\u201d style's <code>one</code> character.</li> <li>Added weight \u201cBook\u201d.</li> <li>Fix broken shape of heavy curly V, etc.</li> <li>Improve double-line arrow ligations.</li> <li>Add diamond-shaped <code>&lt;&gt;</code> ligation, and enabled that for Haskell.</li> <li>Added bar-less <code>u</code> variants, and JetBrains Mono:<ul> <li>Assigned <code>cv90</code> to this variant.</li> <li>Assigned <code>ss14</code> to the stylistic set.      </li> </ul> </li> </ul> </li> <li>3.0.0-beta.3<ul> <li>Made the curly-bar variant via OpenType tag <code>ss20</code>.</li> <li>Alias U+2B95 to U+27A1.</li> <li>Add symbol U+22DA, U+22DB, U+23B0, U+23B1, etc.</li> <li>Finished the unicode block that supports retro computer characters.</li> <li>Building: The shape weight is now a continuous space.      </li> </ul> </li> <li>3.0.0-beta.2<ul> <li>Fix horn connection on O-horn with tone marks: <code>\u1edc \u1edd \u1eda \u1edb \u1ede \u1edf \u1ee0 \u1ee1 \u1ee2 \u1ee3</code>.</li> <li>Optimize the anchor position of <code>R</code> and <code>\u024f</code> (U+024F).      </li> </ul> </li> <li>3.0.0-beta.1<ul> <li>Fix the shape of <code>Rrotunda</code> (U+A75A) and <code>rrotunda</code> (U+A75B).</li> <li>Make curly <code>k</code> under Slab variants look more different than the straight ones.</li> <li>Fixed minor stroke overflow on <code>A</code>.</li> <li>Fix O-hook connection.</li> <li>Add more math symbols (<code>\u227a</code>, <code>\u227b</code>, <code>\u228f</code>, <code>\u2290</code>, etc.) for Agda.      </li> </ul> </li> <li>3.0.0-alpha.5<ul> <li>Made hooks' terminal flat, which applies to <code>a</code>, <code>c</code>, <code>e</code>, etc.</li> <li>Add variant selector for <code>f</code>: <code>v-f-serifed</code>.</li> <li>Add variant selectors for <code>r</code>: <code>v-r-standard</code>, <code>v-r-serifed</code>, <code>v-r-top-serifed</code>.</li> <li>Fix various <code>r</code>-related glyphs' shape.</li> <li>Fix shape of cursive <code>k</code> under Slab shape.</li> <li>Fix Bulgarian Tse shape.</li> <li>Add <code>fwid</code> and <code>hwid</code> for Powerline.</li> <li>Default <code>g</code> to single-storey.      </li> </ul> </li> <li>3.0.0-alpha.4<ul> <li>Added three-line ligation of <code>===</code> and <code>!==</code> for JavaScript, PHP, etc.</li> <li>Default ligature set selector: <code>ligset-javascript</code> and <code>ligset-php</code>.</li> <li>Cherry-picking configuration selector: <code>eqeqeq</code> and <code>exeqeq</code>.</li> <li>OpenType tags: <code>XJS0</code>, <code>XPHP</code>.</li> <li>Exposed curly-vs-straight letterform selectors.</li> <li>OpenType tags are from <code>cv70</code> to <code>cv83</code>.</li> <li>Fixed style linking for extended variants.      </li> </ul> </li> <li>3.0.0-alpha.3<ul> <li>Added ligation for <code>~&gt;</code>, <code>&lt;~</code>, <code>~~&gt;</code>, etc.</li> <li>Further refined the shapes of APL symbols.</li> <li>Added old-style numbers. Feature <code>onum</code> and <code>lnum</code> are enabled.      </li> </ul> </li> <li>3.0.0-alpha.2<ul> <li>Extended width will be built automatically and integrate into existing families.</li> <li>Added more letter-like symbols: <code>\u214b</code>, <code>\u2102</code>, <code>\u210d</code>, <code>\u2119</code>, <code>\u2115</code>,\u00a0<code>\u211a</code>, <code>\u211d</code>, <code>\u2124</code>, <code>\u2135</code>, <code>\u2136</code>.</li> <li>Refine the height of brackets and symbols.</li> <li>Renamed various variant selectors:<ul> <li><code>v-m-longleg</code> \u2192 <code>v-m-normal</code></li> <li><code>v-one-hooky</code> \u2192 <code>v-one-nobase</code></li> <li><code>v-one-serifed</code> \u2192 <code>v-one-base</code></li> <li><code>v-seven-normal</code> \u2192 <code>v-seven-noserif</code></li> <li><code>v-seven-force-serifed</code> \u2192 <code>v-seven-serifed</code></li> </ul> </li> <li>Added <code>v-lig-ltgteq-flat</code>\u00a0(<code>cv66</code>)\u00a0and <code>v-lig-ltgteq-slanted</code>\u00a0(<code>cv67</code>) to change the shape of <code>&lt;=</code>\u00a0and <code>&gt;=</code> ligation.      </li> </ul> </li> <li>3.0.0-alpha.1<ul> <li>The letters <code>k</code>, <code>x</code>,\u00a0<code>v</code>,\u00a0<code>A</code>,\u00a0etc. will now use straight legs by default. The \u201ccurly\u201d families will keep the old shape.</li> <li>Note this is a parameter difference rather than variant. So there won\u2019t be a <code>cv##</code>\u00a0or <code>ss##</code>\u00a0variant selector.</li> <li>Introduced a curly italic <code>k</code> with untagged variant <code>v-k-italic</code>.</li> <li>Introduced <code>ss12</code>\u00a0OpenType tag for Ubuntu-Mono style as well as a prebuilt <code>SS12</code>\u00a0family.</li> </ul> </li> </ul>"},{"location":"fonts/iosevka/LICENSE/","title":"LICENSE","text":"<p>The font is licensed under SIL OFL Version 1.1.</p> <p>The support code is licensed under Berkeley Software Distribution license.</p>"},{"location":"fonts/iosevka/LICENSE/#-","title":"---","text":"<p>Copyright (c) 2015-2020 Belleve Invis (belleve@typeof.net).</p> <p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. * Neither the name of Belleve Invis nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</p> <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL BELLEVE INVIS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p> <p>Copyright 2015-2020, Belleve Invis (belleve@typeof.net).</p> <p>This Font Software is licensed under the SIL Open Font License, Version 1.1.</p> <p>This license is copied below, and is also available with a FAQ at: http://scripts.sil.org/OFL</p>"},{"location":"fonts/iosevka/LICENSE/#sil-open-font-license-v11","title":"SIL Open Font License v1.1","text":""},{"location":"fonts/iosevka/LICENSE/#preamble","title":"Preamble","text":"<p>The goals of the Open Font License (OFL) are to stimulate worldwide development of collaborative font projects, to support the font creation efforts of academic and linguistic communities, and to provide a free and open framework in which fonts may be shared and improved in partnership with others.</p> <p>The OFL allows the licensed fonts to be used, studied, modified and redistributed freely as long as they are not sold by themselves. The fonts, including any derivative works, can be bundled, embedded,  redistributed and/or sold with any software provided that any reserved names are not used by derivative works. The fonts and derivatives, however, cannot be released under any other type of license. The requirement for fonts to remain under this license does not apply to any document created using the fonts or their derivatives.</p>"},{"location":"fonts/iosevka/LICENSE/#definitions","title":"Definitions","text":"<p><code>\"Font Software\"</code> refers to the set of files released by the Copyright Holder(s) under this license and clearly marked as such. This may include source files, build scripts and documentation.</p> <p><code>\"Reserved Font Name\"</code> refers to any names specified as such after the copyright statement(s).</p> <p><code>\"Original Version\"</code> refers to the collection of Font Software components as distributed by the Copyright Holder(s).</p> <p><code>\"Modified Version\"</code> refers to any derivative made by adding to, deleting, or substituting -- in part or in whole -- any of the components of the Original Version, by changing formats or by porting the Font Software to a new environment.</p> <p><code>\"Author\"</code> refers to any designer, engineer, programmer, technical writer or other person who contributed to the Font Software.</p>"},{"location":"fonts/iosevka/LICENSE/#permission-conditions","title":"Permission &amp; Conditions","text":"<p>Permission is hereby granted, free of charge, to any person obtaining a copy of the Font Software, to use, study, copy, merge, embed, modify, redistribute, and sell modified and unmodified copies of the Font Software, subject to the following conditions:</p> <ol> <li> <p>Neither the Font Software nor any of its individual components,    in Original or Modified Versions, may be sold by itself.</p> </li> <li> <p>Original or Modified Versions of the Font Software may be bundled,    redistributed and/or sold with any software, provided that each copy    contains the above copyright notice and this license. These can be    included either as stand-alone text files, human-readable headers or    in the appropriate machine-readable metadata fields within text or    binary files as long as those fields can be easily viewed by the user.</p> </li> <li> <p>No Modified Version of the Font Software may use the Reserved Font    Name(s) unless explicit written permission is granted by the corresponding    Copyright Holder. This restriction only applies to the primary font name as    presented to the users.</p> </li> <li> <p>The name(s) of the Copyright Holder(s) or the Author(s) of the Font    Software shall not be used to promote, endorse or advertise any    Modified Version, except to acknowledge the contribution(s) of the    Copyright Holder(s) and the Author(s) or with their explicit written    permission.</p> </li> <li> <p>The Font Software, modified or unmodified, in part or in whole,    must be distributed entirely under this license, and must not be    distributed under any other license. The requirement for fonts to    remain under this license does not apply to any document created    using the Font Software.</p> </li> </ol>"},{"location":"fonts/iosevka/LICENSE/#termination","title":"Termination","text":"<p>This license becomes null and void if any of the above conditions are not met.</p> <pre><code>DISCLAIMER\n\nTHE FONT SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT\nOF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE\nCOPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nINCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL\nDAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM\nOTHER DEALINGS IN THE FONT SOFTWARE.\n</code></pre>"},{"location":"links/link/","title":"Link","text":""},{"location":"links/link/#noi-tim-bai-bao","title":"N\u01a1i t\u00ecm b\u00e0i b\u00e1o","text":"N\u01a1i t\u00ecm b\u00e0i b\u00e1o M\u00f4 t\u1ea3 Link arXiv Kho l\u01b0u tr\u1eef n\u00e0y l\u00e0 n\u01a1i c\u00e1c nh\u00e0 nghi\u00ean c\u1ee9u \u0111\u0103ng t\u1ea3i c\u00e1c b\u1ea3n th\u1ea3o tr\u01b0\u1edbc khi xu\u1ea5t b\u1ea3n (pre-prints) v\u1ec1 nhi\u1ec1u l\u0129nh v\u1ef1c, \u0111\u1eb7c bi\u1ec7t l\u00e0 AI, h\u1ecdc m\u00e1y (machine learning) v\u00e0 ng\u00f4n ng\u1eef t\u1ef1 nhi\u00ean. https://arxiv.org/ Google Scholar C\u00f4ng c\u1ee5 t\u00ecm ki\u1ebfm m\u1ea1nh m\u1ebd nh\u1ea5t v\u00e0 d\u1ec5 s\u1eed d\u1ee5ng. B\u1ea1n c\u00f3 th\u1ec3 t\u00ecm ki\u1ebfm theo t\u1eeb kh\u00f3a, t\u00e1c gi\u1ea3, ho\u1eb7c t\u00ean t\u1ea1p ch\u00ed. https://scholar.google.com/ Semantic Scholar M\u1ed9t c\u00f4ng c\u1ee5 t\u00ecm ki\u1ebfm mi\u1ec5n ph\u00ed, s\u1eed d\u1ee5ng AI \u0111\u1ec3 t\u00f3m t\u1eaft c\u00e1c b\u00e0i b\u00e1o v\u00e0 k\u1ebft n\u1ed1i c\u00e1c nghi\u00ean c\u1ee9u li\u00ean quan, gi\u00fap b\u1ea1n d\u1ec5 d\u00e0ng theo d\u00f5i m\u1ed9t ch\u1ee7 \u0111\u1ec1 c\u1ee5 th\u1ec3. https://www.semanticscholar.org/ huggingface.co/papers tr\u00ean Hugging Face l\u00e0 m\u1ed9t kho l\u01b0u tr\u1eef v\u00e0 n\u1ec1n t\u1ea3ng kh\u00e1m ph\u00e1 c\u00e1c b\u00e0i b\u00e1o nghi\u00ean c\u1ee9u trong l\u0129nh v\u1ef1c tr\u00ed tu\u1ec7 nh\u00e2n t\u1ea1o (AI) v\u00e0 h\u1ecdc m\u00e1y (machine learning). https://huggingface.co/papers https://journals.plos.org/ M\u1ee5c ti\u00eau ch\u00ednh c\u1ee7a PLOS l\u00e0 th\u00fac \u0111\u1ea9y khoa h\u1ecdc m\u1edf (open science) b\u1eb1ng c\u00e1ch xu\u1ea5t b\u1ea3n c\u00e1c t\u1ea1p ch\u00ed h\u1ecdc thu\u1eadt ch\u1ea5t l\u01b0\u1ee3ng cao, c\u00f3 b\u00ecnh duy\u1ec7t (peer-reviewed), v\u00e0 cung c\u1ea5p n\u1ed9i dung truy c\u1eadp mi\u1ec5n ph\u00ed cho t\u1ea5t c\u1ea3 m\u1ecdi ng\u01b0\u1eddi. https://plos.org/our-journals/"},{"location":"links/link/#nen-tang-thuc-hanh","title":"N\u1ec1n t\u1ea3ng th\u1ef1c h\u00e0nh","text":"N\u1ec1n t\u1ea3ng th\u1ef1c h\u00e0nh M\u00f4 t\u1ea3 Link Kaggle Kaggle l\u00e0 m\u1ed9t n\u1ec1n t\u1ea3ng v\u00e0 c\u1ed9ng \u0111\u1ed3ng tr\u1ef1c tuy\u1ebfn l\u1edbn nh\u1ea5t d\u00e0nh cho c\u00e1c nh\u00e0 khoa h\u1ecdc d\u1eef li\u1ec7u v\u00e0 chuy\u00ean gia h\u1ecdc m\u00e1y. https://www.kaggle.com/ Google Colab Google Colab l\u00e0 m\u1ed9t d\u1ecbch v\u1ee5 cung c\u1ea5p m\u00f4i tr\u01b0\u1eddng Jupyter Notebook mi\u1ec5n ph\u00ed tr\u00ean n\u1ec1n t\u1ea3ng \u0111\u00e1m m\u00e2y. N\u00f3 \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 \u0111\u01a1n gi\u1ea3n h\u00f3a vi\u1ec7c vi\u1ebft v\u00e0 th\u1ef1c thi m\u00e3 Python, \u0111\u1eb7c bi\u1ec7t l\u00e0 trong c\u00e1c l\u0129nh v\u1ef1c nh\u01b0 h\u1ecdc m\u00e1y v\u00e0 ph\u00e2n t\u00edch d\u1eef li\u1ec7u. https://colab.research.google.com/"},{"location":"links/link/#khoa-hoc-hay","title":"Kh\u00f3a h\u1ecdc hay","text":"Kh\u00f3a h\u1ecdc hay M\u00f4 t\u1ea3 Link Stanford CS336 Language Modeling from Scratch Kh\u00f3a h\u1ecdc n\u00e0y \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 cung c\u1ea5p cho sinh vi\u00ean s\u1ef1 hi\u1ec3u bi\u1ebft to\u00e0n di\u1ec7n v\u1ec1 m\u00f4 h\u00ecnh ng\u00f4n ng\u1eef b\u1eb1ng c\u00e1ch h\u01b0\u1edbng d\u1eabn h\u1ecd qua to\u00e0n b\u1ed9 qu\u00e1 tr\u00ecnh ph\u00e1t tri\u1ec3n m\u00f4 h\u00ecnh c\u1ee7a ri\u00eang m\u00ecnh. https://www.youtube.com/watch?v=SQ3fZ1sAqXI&amp;list=PLoROMvodv4rOY23Y0BoGoBGgQ1zmU_MT_ Linear Algebra \u0110\u00e2y l\u00e0 m\u00f4n h\u1ecdc c\u01a1 b\u1ea3n v\u1ec1 l\u00fd thuy\u1ebft ma tr\u1eadn v\u00e0 \u0111\u1ea1i s\u1ed1 tuy\u1ebfn t\u00ednh. M\u00f4n h\u1ecdc t\u1eadp trung v\u00e0o c\u00e1c ch\u1ee7 \u0111\u1ec1 h\u1eefu \u00edch trong c\u00e1c l\u0129nh v\u1ef1c kh\u00e1c, bao g\u1ed3m h\u1ec7 ph\u01b0\u01a1ng tr\u00ecnh, kh\u00f4ng gian vect\u01a1, \u0111\u1ecbnh th\u1ee9c, tr\u1ecb ri\u00eang, t\u00ednh \u0111\u1ed3ng d\u1ea1ng v\u00e0 ma tr\u1eadn x\u00e1c \u0111\u1ecbnh d\u01b0\u01a1ng. https://www.youtube.com/watch?v=ZK3O402wf1c&amp;list=PL49CF3715CB9EF31D Probability Ki\u1ebfn th\u1ee9c v\u1ec1 x\u00e1c su\u1ea5t th\u1ed1ng k\u00ea https://www.youtube.com/watch?v=KbB0FjPg0mw&amp;list=PL2SOU6wwxB0uwwH80KTQ6ht66KWxbzTIo"},{"location":"links/link/#blog-hay","title":"Blog Hay","text":"Blog M\u00f4 t\u1ea3 Link DeepLearning.AI \u0110\u01b0\u1ee3c s\u00e1ng l\u1eadp b\u1edfi Andrew Ng, \u0111\u00e2y l\u00e0 m\u1ed9t trong nh\u1eefng trang web h\u00e0ng \u0111\u1ea7u v\u1ec1 h\u1ecdc s\u00e2u. Ngo\u00e0i c\u00e1c kh\u00f3a h\u1ecdc ch\u1ea5t l\u01b0\u1ee3ng, blog c\u1ee7a h\u1ecd c\u0169ng th\u01b0\u1eddng xuy\u00ean c\u1eadp nh\u1eadt c\u00e1c b\u00e0i vi\u1ebft chuy\u00ean s\u00e2u, ph\u1ecfng v\u1ea5n c\u00e1c chuy\u00ean gia v\u00e0 tin t\u1ee9c m\u1edbi nh\u1ea5t v\u1ec1 DL https://www.deeplearning.ai/ Microsoft AI Blog Microsoft l\u00e0 m\u1ed9t trong nh\u1eefng c\u00f4ng ty d\u1eabn \u0111\u1ea7u trong l\u0129nh v\u1ef1c LLM v\u00e0 AI. Blog c\u1ee7a h\u1ecd th\u01b0\u1eddng xuy\u00ean c\u00f4ng b\u1ed1 c\u00e1c t\u00ednh n\u0103ng m\u1edbi, tr\u01b0\u1eddng h\u1ee3p s\u1eed d\u1ee5ng th\u1ef1c t\u1ebf v\u00e0 nh\u1eefng hi\u1ec3u bi\u1ebft chuy\u00ean s\u00e2u v\u1ec1 c\u00e1c m\u00f4 h\u00ecnh ng\u00f4n ng\u1eef l\u1edbn nh\u01b0 GPT. https://www.microsoft.com/en-us/ai/blog/ Google for Developers Blog Google c\u0169ng l\u00e0 m\u1ed9t \"g\u00e3 kh\u1ed5ng l\u1ed3\" trong l\u0129nh v\u1ef1c n\u00e0y. Blog d\u00e0nh cho nh\u00e0 ph\u00e1t tri\u1ec3n c\u1ee7a Google cung c\u1ea5p c\u00e1c b\u00e0i vi\u1ebft gi\u1edbi thi\u1ec7u v\u1ec1 LLM, c\u00e1ch ho\u1ea1t \u0111\u1ed9ng c\u1ee7a ch\u00fang v\u00e0 c\u00e1c \u1ee9ng d\u1ee5ng th\u1ef1c t\u1ebf. https://blog.google/technology/ai/ AWS Machine Learning Blog Blog n\u00e0y c\u1ee7a Amazon Web Services (AWS) th\u01b0\u1eddng t\u1eadp trung v\u00e0o c\u00e1ch \u1ee9ng d\u1ee5ng LLM trong c\u00e1c gi\u1ea3i ph\u00e1p \u0111\u00e1m m\u00e2y, v\u1edbi nhi\u1ec1u b\u00e0i vi\u1ebft chi ti\u1ebft v\u1ec1 c\u00e1c \u1ee9ng d\u1ee5ng nh\u01b0 t\u1ea1o m\u00e3, ph\u00e2n t\u00edch v\u0103n b\u1ea3n v\u00e0 chatbot. https://aws.amazon.com/blogs/machine-learning/ https://ai.meta.com/blog/ Blog n\u00e0y t\u1eadp trung v\u00e0o c\u00e1c nghi\u00ean c\u1ee9u v\u00e0 \u1ee9ng d\u1ee5ng \u0111\u1ed9t ph\u00e1 trong l\u0129nh v\u1ef1c tr\u00ed tu\u1ec7 nh\u00e2n t\u1ea1o. https://ai.meta.com/blog/ Lilian Weng Lilian Weng l\u00e0 m\u1ed9t nh\u00e0 khoa h\u1ecdc nghi\u00ean c\u1ee9u v\u00e0 l\u00e0 Tr\u01b0\u1edfng b\u1ed9 ph\u1eadn AI t\u1ea1i OpenAI. Blog c\u1ee7a c\u00f4 \u1ea5y, \u0111\u1eb7c bi\u1ec7t l\u00e0 c\u00e1c b\u00e0i vi\u1ebft tr\u00ean trang c\u00e1 nh\u00e2n, l\u00e0 ngu\u1ed3n t\u00e0i li\u1ec7u tuy\u1ec7t v\u1eddi \u0111\u1ec3 hi\u1ec3u v\u1ec1 c\u00e1c m\u00f4 h\u00ecnh ng\u00f4n ng\u1eef l\u1edbn, reinforcement learning v\u00e0 c\u00e1c h\u1ec7 th\u1ed1ng AI Agent ph\u1ee9c t\u1ea1p. C\u00e1c b\u00e0i vi\u1ebft th\u01b0\u1eddng t\u00f3m t\u1eaft c\u00e1c c\u00f4ng tr\u00ecnh nghi\u00ean c\u1ee9u n\u1ed5i b\u1eadt, gi\u00fap ng\u01b0\u1eddi \u0111\u1ecdc d\u1ec5 d\u00e0ng n\u1eafm b\u1eaft nh\u1eefng ti\u1ebfn b\u1ed9 m\u1edbi nh\u1ea5t. https://lilianweng.github.io/ Jay Alammar Jay Alammar c\u00f3 c\u00e1ch gi\u1ea3i th\u00edch c\u00e1c kh\u00e1i ni\u1ec7m AI ph\u1ee9c t\u1ea1p m\u1ed9t c\u00e1ch c\u1ef1c k\u1ef3 tr\u1ef1c quan. Blog c\u1ee7a anh \u1ea5y n\u1ed5i ti\u1ebfng v\u1edbi c\u00e1c b\u00e0i vi\u1ebft v\u1ec1 ki\u1ebfn tr\u00fac Transformer (\"The Illustrated Transformer\") v\u00e0 c\u00e1c m\u00f4 h\u00ecnh ng\u00f4n ng\u1eef l\u1edbn https://newsletter.languagemodels.co/ Sebastian Raschka Sebastian Raschka l\u00e0 m\u1ed9t trong nh\u1eefng t\u00e1c gi\u1ea3 s\u00e1ch h\u00e0ng \u0111\u1ea7u v\u1ec1 Machine Learning v\u00e0 Deep Learning. Blog c\u1ee7a \u00f4ng t\u1eadp trung v\u00e0o c\u00e1c ch\u1ee7 \u0111\u1ec1 th\u1ef1c t\u1ebf, t\u1eeb c\u00e1c k\u1ef9 thu\u1eadt Machine Learning c\u01a1 b\u1ea3n \u0111\u1ebfn nh\u1eefng nghi\u00ean c\u1ee9u m\u1edbi nh\u1ea5t v\u1ec1 LLM. \u00d4ng c\u0169ng th\u01b0\u1eddng xuy\u00ean chia s\u1ebb c\u00e1c b\u00e0i h\u01b0\u1edbng d\u1eabn chi ti\u1ebft v\u1ec1 c\u00e1ch tri\u1ec3n khai c\u00e1c m\u00f4 h\u00ecnh trong th\u1ef1c t\u1ebf. https://sebastianraschka.com/blog/ Eugene Yan Eugene Yan l\u00e0 m\u1ed9t chuy\u00ean gia v\u1ec1 Machine Learning t\u1eeb Amazon v\u00e0 hi\u1ec7n \u0111ang l\u00e0m vi\u1ec7c t\u1ea1i m\u1ed9t startup. Blog c\u1ee7a anh \u1ea5y t\u1eadp trung v\u00e0o kh\u00eda c\u1ea1nh th\u1ef1c t\u1ebf c\u1ee7a vi\u1ec7c x\u00e2y d\u1ef1ng v\u00e0 tri\u1ec3n khai c\u00e1c h\u1ec7 th\u1ed1ng ML trong m\u00f4i tr\u01b0\u1eddng s\u1ea3n xu\u1ea5t. https://eugeneyan.com/"},{"location":"links/link/#youtuber","title":"Youtuber","text":"Youtuber M\u00f4 t\u1ea3 Link Andrej Karpathy V\u1ec1 LLM, DL https://www.youtube.com/@AndrejKarpathy/videos Yannic Kilcher Gi\u1ea3i th\u00edch c\u00e1c b\u00e0i b\u00e1o https://www.youtube.com/@YannicKilcher Corey Schafer Chuy\u00ean V\u1ec1 Python https://www.youtube.com/@coreyms MIT OpenCourseWare C\u00e1c kh\u00f3a h\u1ecdc m\u1edf https://www.youtube.com/@mitocw Lex Fridman Podcast https://www.youtube.com/@lexfridman 3Blue1Brown G\u1ea3i th\u00edch c\u00e1c kh\u00e1i ni\u1ec7m DL, To\u00e1n. Tr\u1ef1c quan b\u1eb1ng h\u00ecnh \u1ea3nh. https://www.youtube.com/@3blue1brown"},{"location":"llm/hello/","title":"Hello","text":"<p>hello</p>"},{"location":"math/hello/","title":"Hello","text":"<p>Hello</p>"},{"location":"pytorch/basic/","title":"Basic","text":"<p>hello </p>"},{"location":"blog/archive/2022/","title":"2022","text":""},{"location":"blog/category/blog/","title":"Blog","text":""}]}